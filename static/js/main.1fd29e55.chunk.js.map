{"version":3,"sources":["state/app/createReducer.js","state/manualTrigger/manualTriggerState.js","random.js","state/rounds/roundsState.js","state/activePrimalEvents/activePrimalEventsState.js","state/primalStorm/primalStormState.js","state/triggerDialog/triggerDialogState.js","state/eventExpansionState/eventExpansionState.js","state/userSettings/userSetingsState.js","state/app/primalMagic.reducer.js","state/app/App.reducer.js","images/primal_magic_image.png","homepage/homepage.component.js","errorPages/basicErrorMessage.component.js","errorPages/errorPage.component.js","errorPages/pageNotFoundError.component.js","common/barHeader.component.js","common/colours.js","common/linkDisplay.component.js","common/utils.js","common/variableMark.component.js","common/conditionDisplay.component.js","events/eventComponents/rodOfWonderResults/blindingColoursResult.component.js","events/eventComponents/rodOfWonderResults/butterflyStreamResult.component.js","events/eventComponents/rodOfWonderResults/colourChangeResult.component.js","common/spellDisplay.component.js","events/eventComponents/rodOfWonderResults/darknessResult.component.js","events/eventComponents/rodOfWonderResults/delusionResult.component.js","events/eventComponents/rodOfWonderResults/detectThoughtsResult.component.js","events/eventComponents/rodOfWonderResults/enlargePersonResult.component.js","events/eventComponents/rodOfWonderResults/etherealObjectResult.component.js","events/eventComponents/rodOfWonderResults/faerieFireResult.component.js","events/eventComponents/rodOfWonderResults/fireballResult.component.js","events/eventComponents/rodOfWonderResults/fleshToStoneResult.component.js","events/eventComponents/rodOfWonderResults/gemsResult.component.js","events/eventComponents/rodOfWonderResults/grassResult.component.js","events/eventComponents/rodOfWonderResults/gustOfWindResult.component.js","events/eventComponents/rodOfWonderResults/heavyRainResult.component.js","events/eventComponents/rodOfWonderResults/invisibilityResult.component.js","events/eventComponents/rodOfWonderResults/leavesResult.component.js","events/eventComponents/rodOfWonderResults/lightningBoltResult.component.js","events/eventComponents/rodOfWonderResults/reduceWielderResult.component.js","events/eventComponents/rodOfWonderResults/slowResult.component.js","events/eventComponents/rodOfWonderResults/stinkingCloud.component.js","events/eventComponents/rodOfWonderResults/summonAnimalResult.component.js","events/eventComponents/rodOfWonderResults/rodOfWonderResults.js","events/eventComponents/wonderousMagicEvent.component.js","events/eventComponents/auroraBorealisEvent.component.js","events/eventComponents/blackTentaclesEvent.component.js","events/eventComponents/boomingCannonsEvent.component.js","events/eventComponents/catchyMusicEvent.component.js","events/eventComponents/centipedesEvent.component.js","events/eventComponents/colourDrainEvent.component.js","events/eventComponents/elementalGrudgeEvent.component.js","events/eventComponents/elementalUprisingEvent.component.js","events/eventComponents/enantiomaticSelfEvent.component.js","events/eventComponents/energeticTouchEvent.component.js","events/eventComponents/energyStormEvent.component.js","events/eventComponents/extradimensionalPit.component.js","events/eventComponents/forgeOfCriticals.component.js","events/eventComponents/harmEvent.component.js","events/eventComponents/healEvent.component.js","events/eventComponents/icyDread.component.js","events/eventComponents/magicJarEvent.component.js","events/eventComponents/magneticFieldEvent.component.js","events/eventComponents/massDelusionEvent.component.js","events/eventComponents/orbOfGreaseEvent.component.js","events/eventComponents/rainOfSmallObjectsEvent.component.js","events/eventComponents/teleportationStormEvent.component.js","events/eventComponents/trippingTelekinesisEvent.component.js","events/eventComponents/utterDarknessEvent.component.js","events/eventComponents/weightlessnessEvent.component.js","events/eventComponents/zoneOfUnluckEvent.component.js","events/eventComponents/twoSimlultaneousEvents/limitedEvents.js","common/customChip.component.js","common/durationChip.component.js","common/variableChip.component.js","events/eventCardChips.component.js","events/eventCard.component.js","events/eventComponents/twoSimlultaneousEvents/twoSimultaneousEventsEvent.component.js","events/events.js","state/manualTrigger/manualTriggerState.thunk.js","manualTriggerBar/crInput.component.js","manualTriggerBar/characterSwitch.component.js","manualTriggerBar/manualTriggerContent.component.js","manualTriggerBar/manualTrigger.component.js","state/eventExpansionState/eventExpansionState.thunk.js","activePrimalEventsList/activePrimalEventsListContent.component.js","images/primal_magic_flowchart.png","activePrimalEventsList/flowchartDisplay.component.js","activePrimalEventsList/userSettings.component.js","activePrimalEventsList/activePrimalEventsListFooter.content.js","activePrimalEventsList/activePrimalEventsListHeader.component.js","activePrimalEventsList/activePrimalEventsList.component.js","state/rounds/roundsState.thunk.js","state/primalStorm/primalStormState.thunk.js","roundsBar/primalStormContent.component.js","roundsBar/roundsContent.component.js","roundsBar/roundsBar.component.js","state/triggerDialog/triggerDialogState.thunk.js","primalEventDialog/primalEventDialog.component.js","primalEventPage/primalEventPage.component.js","App.js","styles/theming.js","index.js"],"names":["createReducer","initialState","handlers","state","action","Object","prototype","hasOwnProperty","call","type","payload","characterInitialState","name","cl","undefined","characters","Other","Thunder","Finley","Autumn","Poli","Katsu","manualTriggerInitialState","specifiedCr","character","manualTriggerStateSelector","primalMagic","manualTriggerState","characterSelector","specifiedCrSelector","SetManualTriggerCrType","SetManualTriggerCharacterType","copyState","manualTriggerStateReducers","newState","rollPercentile","rollD","rollTableDice","rollMultipleD","diceSize","diceCount","modifier","Array","keys","reduce","total","generateRandom","min","max","rand","Math","random","round","roundsInitialState","currentRound","currentRoundSelector","roundsState","IncrementRoundType","roundsStateReducers","variableInitialState","result","description","makeConstantVariable","value","makeVariable","makeLimitedVariable","limit","primalEventInitialState","id","percentileRoll","cr","startRound","finalRound","variables","expanded","triggerType","activePrimalEventsSelector","activePrimalEventsState","filter","event","ExpandAllEventsType","CollapseAllEventsType","ToggleSingleExpandedType","AddActivePrimalEventType","activePrimalEventsReducers","map","activePrimalEvent","match","find","matchIndex","indexOf","matchToggled","push","primalStormInitialState","active","suppressed","leftArea","currentChance","calculateIncrementAndMax","increment","primalStormStateSelector","primalStormState","ResetStateType","SetActiveType","SetSuppressedType","SetLeftAreaType","SetCurrentChanceType","primalStormStateReducers","manualTriggerType","triggerDialogInitialState","open","percentile","threshold","currentEvent","triggerDialogStateSelector","triggerDialogState","SetTriggerDialogStateType","SetTriggerDialogPrimalEventType","ToggleTriggerDialogPrimalEventExpandedType","CloseTriggerDialogType","setTriggerDialogState","closeTriggerDialog","triggerDialogStateReducers","allExpandedSelector","eventExpansionState","allExpanded","SetAllExpandedStateType","setAllExpandedState","eventExpansionReducers","userSettingsStateSelector","userSettingsState","eventsAlwaysTriggerSelector","eventsAlwaysTrigger","alwaysSelectSameEventSelector","alwaysSelectSameEvent","eventAlwaysSelectedSelector","eventAlwaysSelected","alwaysSelectSameRodResultSelector","alwaysSelectSameRodResult","rodOfWonderAlwaysSelectedSelector","rodOfWonderAlwaysSelected","resetOnlyResetsRoundsSelector","resetOnlyResetsRounds","SetEventsAlwaysTriggerType","SetAlwaysSelectSameEventType","SetEventAlwaysSelectedType","SetRodResultAlwaysSelectedType","SetRodOfWonderAlwaysSelectedType","SetResetOnlyResetsRoundsType","userSettingsStateReducers","ResetAllType","ResetAllForceType","PrimalMagicReducer","AppReducer","history","combineReducers","router","connectRouter","primalMagicReducer","useStyles","makeStyles","container","display","flexDirection","justifyContent","alignItems","height","cardHeader","textAlign","paddingTop","paddingBottom","cardActions","Homepage","classes","dispatch","useDispatch","className","Card","CardHeader","title","to","src","primalMagicImage","CardActions","Button","component","NavLink","variant","onClick","withStyles","message","paddingLeft","paddingRight","icon","marginRight","children","Typography","theme","titleContainer","width","color","palette","primary","main","titleText","fontWeight","fontSize","padding","maxWidth","errorTitle","PageNotFoundError","header","backgroundColor","colour","borderTopLeftRadius","borderTopRightRadius","BarHeader","Box","manualTriggerHeader","red","manualTriggerHeaderEmphasis","primalStormHeader","green","primalStormHeaderEmphasis","primalEventsHeader","indigo","userSettingsHeader","orange","eventActive","eventImminant","purple","AonLink","link","noHighlight","href","target","rel","defaultProps","objectToArrayString","object","separator","entries","key","join","mark","u","includes","lightBlue","time","dist","willSave","fortSave","reflexSave","strengthCheck","weight","direction","energy","energyTypes","1","2","3","4","directions","5","6","7","8","getSave","variable","saveType","isCheck","unit","prefix","getValues","unitType","floor","getTime","getDist","getCasterLevel","getWeight","getDirection","getEnergy","getToolTip","VM","v","h","toolTip","Tooltip","placement","Condition","blindingColours","percentileMin","percentileMax","createVariables","length","duration","save","BlindingColoursEvent","butterflyStream","radius","butteflyCount","ButterflyStreamResult","colourChange","targets","handleTargets","colours","handleColours","ColourChangeResult","Spell","linkName","casterLevel","encodeURIComponent","darkness","diameter","distance","cardinalDirection","DarknessResult","delusion","secondDieRoll","DelusionResult","detectThoughts","DetectThoughtsResult","enlargePerson","EnlargePersonResult","etherealObject","mass","volume","EtherealObjectResult","faerieFire","FaerieFireResult","fireball","damage","FireballResult","fleshToStone","FleshToStoneResult","gems","gemCount","numberOfHits","GemsResult","grass","area","existingGrowthAmount","GrassResult","gustOfWind","GustOfWindResult","heavyRain","HeavyRainResult","invisibility","InvisibilityResult","leaves","LeavesResult","lightningBolt","LightningBoltEvent","reduceWielder","ReduceWielderResult","slow","SlowResult","stinkingCloud","StinkingCloudResult","summonAnimal","animalSummonPercentile","handleAnimalType","SummonAnimalResult","rodOfWonderResults","getRodResult","results","e","wonderousMagic","table","_","rodOfWonderEventAlwaysSelected","getRodResultByTitle","rodOfWonderPercentile","rodOfWonderVariables","WonderousMagicEvent","rodComponent","rodResult","getRodOfWonderComponent","auroraBorealis","AuroraBorealisEvent","blackTentacles","BlackTentaclesEvent","boomingCannons","misfire","BoomingCannonsEvent","catchyMusic","chantType","battleChants","handleChant","CatchyMusicEvent","centipedes","centipedeCount","handleCentipedes","CentipedesEvent","colourDrain","ColourDrainEvent","elementalGrudge","elementalType","elementalTypes","crSizes","9","11","getElementalLink","availableSizes","size","handleElementalType","ElementalGrudgeEvent","elementalUprising","elementalCount","handleElementals","ElementalUprisingEvent","enantiomaticSelf","EnantiomaticSelfEvent","energeticTouch","energyType","EnergeticTouchEvent","energyStorm","EnergyStormEvent","extradimensionalPit","depth","ExtradimensionalPitEvent","forgeOfCriticals","ForgeOfCriticalsEvent","harm","creaturesAffected","HarmEvent","heal","HealEvent","icyDread","IcyDreadEvent","magicJar","stunDuration","bodySwapDuration","MagicJarEvent","magneticField","cmb","strengthDc","MagneticFieldEvent","massDelusion","MassDelusionEvent","orbOfGrease","OrbOfGreaseEvent","rainOfSmallObjects","RainOfSmallObjectsEvent","teleportationStorm","TeleportationStormEvent","trippingTelekinesis","TrippingTelekinesisEvent","utterDarkness","UtterDarknessEvent","weightlessness","rate","WeightlessnessEvent","zoneOfUnluck","ZoneOfUnluckEvent","getLimitedEventCardContent","limitedEvents","getLimitedEvent","tableRoll","eventsInRange","chip","CustomChip","label","Chip","avatar","Avatar","DurationEndChip","useSelector","durationInMins","ceil","plural","durationInHours","durationInDays","VariableChip","EventCardChips","initiative","finalRoundDisplay","getFinalRoundOrUndefined","card","titleColour","expiresThisTurn","expandAction","marginTop","cardContent","EventCard","onExpandToggleClicked","getEventCardContent","subheader","titleTypographyProps","IconButton","disableRipple","CardContent","divider","marginBottom","prefixVariableKeys","newVariables","forEach","twoSimultaneousEvents","percentileOne","tableOne","percentileTwo","tableTwo","eventOne","eventOneVariables","eventTwo","eventTwoVariables","firstVars","secondVars","firstDuration","oneduration","secondDuration","twoduration","longestDuration","deconstructEvent","isOpen","variablePrefix","deconstructedEventVariables","startsWith","replace","removeVariableKeyPrefix","calculateFinalRound","TwoSimultaneousEventsEvent","useState","eventOneOpen","setEventOneOpen","eventTwoOpen","setEventTwoOpen","Divider","cyan","events","durationVariable","durationInRounds","generateEventVariablesWithDefaults","crVal","rodOfWonderResultAlwaysSelected","generateDialogEvent","crVar","correspondingEvent","eventsWithTitle","getEventByTitle","getEvent","Date","now","inputContainer","input","CrInput","currentCharacter","disabled","currentCr","crError","crErrorLabel","Grid","spacing","item","TextField","error","helperText","InputLabelProps","hidden","inputProps","onChange","number","parseInt","radioContainer","CharacterSwitch","FormControl","RadioGroup","selected","setManualTriggerCharacter","FormControlLabel","labelPlacement","control","Radio","content","ManualTriggerContent","footer","margin","ManualTriggerBar","getState","dialogState","alwaysShowSameRodResult","eventPercentile","toggleAllExpandedThunk","toggleSingleExpandedThunk","toggleSingleExpanded","overflow","ActivePrimalEventsListContent","activePrimalEvents","toggleSingleClicked","primalEvent","List","ListItem","footerButton","marginLeft","image","FlowchartDisplay","dialogOpen","setDialogOpen","Dialog","onClose","DialogContent","primalMagicFlowchart","dialogContent","minWidth","dialogHeader","dropDown","UserSettings","eventIsRodOfWonder","rodResultAlwaysSelected","DialogTitle","Checkbox","checked","Select","setEventAlwaysSelected","sort","a","b","MenuItem","setRodOfWonderAlwaysSelected","ActivePrimalEventsListFooter","subtitleContainer","subtitle","expandButton","headerText","ActivePrimalEventsListHeader","toggleAllClicked","buildExpandIcon","buildExpandButton","ActivePrimalEventsList","advanceRoundThunk","newChance","currentThreshold","currentCrVariable","activatePrimalStormThunk","isActive","setPrimalStormActive","currentChanceContainer","currentChanceText","currentChanceAvatar","toString","getColor","PrimalStormContent","makeCheckboxWithTooltip","roundsContent","resetButton","currentRoundDisplay","roundAvatar","RoundsContent","RoundsBar","confirmDialogPrimalEventThunk","triggerDialogCurrentEventSelector","dispatchedEvent","rerollDialogPrimalEventVariablesThunk","currentDialogState","reRollVariable","newDialogState","getBackgroundColour","isManualTrigger","eventOccurrance","reRollButton","blue","justifySelf","reRollContainer","confirmButton","getEmphasisColour","PrimalEventDialog","eventsAlwaysTriggered","eventOccurred","showEventContent","eventOccuranceMessage","chanceMessage","isCapped","getChanceMessage","onCloseDialogClicked","fullWidth","startIcon","DialogActions","contentContainer","grey","buttonPage","page","pinnedEventsPage","PrimalEventPage","Paper","elevation","createHashHistory","middleware","thunk","routerMiddleware","log","ERROR","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","persistReducer","storage","applyMiddleware","persistor","persistStore","App","loading","createMuiTheme","typography","useNextVariants","singleRiskView","textField","slider","select","tabs","formControl","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1fd29e55.chunk.js","sourcesContent":["function createReducer(initialState, handlers) {\r\n  // rather than define a switch statement,\r\n  // this maps the handler actions to the state and payload\r\n  return function reducer(state = initialState, action) {\r\n    if (action && Object.prototype.hasOwnProperty.call(handlers, action.type)) {\r\n      return handlers[action.type](state, action.payload);\r\n    }\r\n    return state;\r\n  };\r\n}\r\n\r\nexport default createReducer;\r\n","export const characterInitialState = {\r\n  name: 'Other',\r\n  cl: undefined,\r\n};\r\n\r\nexport const characters = {\r\n  Other: { ...characterInitialState },\r\n  Thunder: { ...characterInitialState, name: 'Thunder', cl: 8 },\r\n  Finley: { ...characterInitialState, name: 'Finley', cl: 12 },\r\n  Autumn: { ...characterInitialState, name: 'Autumn', cl: 14 },\r\n  Poli: { ...characterInitialState, name: 'Poli', cl: 1 },\r\n  Katsu: { ...characterInitialState, name: 'Katsu', cl: 1 },\r\n};\r\n\r\nexport const manualTriggerInitialState = {\r\n  specifiedCr: 11,\r\n  character: { ...characterInitialState },\r\n};\r\n\r\nexport const manualTriggerStateSelector = state =>\r\n  state.primalMagic.manualTriggerState;\r\nexport const characterSelector = state =>\r\n  manualTriggerStateSelector(state).character;\r\nexport const specifiedCrSelector = state =>\r\n  manualTriggerStateSelector(state).specifiedCr;\r\n\r\nconst SetManualTriggerCrType =\r\n  'primalMagic:manualTriggerState:setManualTriggerCr';\r\nconst SetManualTriggerCharacterType =\r\n  'primalMagic:manualTriggerState:setManualTriggerCharacter';\r\n\r\nexport const setManualTriggerCr = cr => ({\r\n  type: SetManualTriggerCrType,\r\n  payload: cr,\r\n});\r\n\r\nexport const setManualTriggerCharacter = character => ({\r\n  type: SetManualTriggerCharacterType,\r\n  payload: character,\r\n});\r\n\r\nconst copyState = state => ({\r\n  ...state,\r\n  manualTriggerState: {\r\n    ...state.manualTriggerState,\r\n  },\r\n});\r\n\r\nconst handleSetManualTriggerCr = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.manualTriggerState.specifiedCr = payload;\r\n  newState.manualTriggerState.character = { ...characterInitialState };\r\n  return newState;\r\n};\r\n\r\nconst handleSetManualTriggerCharacter = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.manualTriggerState.character = payload;\r\n  if (payload.cl) {\r\n    newState.manualTriggerState.specifiedCr = payload.cl;\r\n  }\r\n\r\n  return newState;\r\n};\r\n\r\nexport const manualTriggerStateReducers = {\r\n  [SetManualTriggerCrType]: handleSetManualTriggerCr,\r\n  [SetManualTriggerCharacterType]: handleSetManualTriggerCharacter,\r\n};\r\n","export const rollPercentile = () => rollD(100);\r\n\r\nexport const rollTableDice = () => rollD(2); // Roll 1d2 to determine whether to use event table 1 or 2\r\n\r\nexport const rollMultipleD = (diceSize, diceCount = 1, modifier = 0) =>\r\n  [...Array(diceCount + 1).keys()].reduce(total => total + rollD(diceSize)) +\r\n  modifier;\r\n\r\nexport const rollD = diceSize => generateRandom(1, diceSize);\r\n\r\nexport const generateRandom = (min, max) => {\r\n  const rand = min + Math.random() * (max - min);\r\n  return Math.round(rand);\r\n};\r\n","export const roundsInitialState = {\r\n  currentRound: 0,\r\n};\r\n\r\nexport const currentRoundSelector = state =>\r\n  state.primalMagic.roundsState.currentRound;\r\n\r\nconst IncrementRoundType = 'primalMagic:roundsState:incrementRound';\r\n\r\nexport const incrementRound = () => ({\r\n  type: IncrementRoundType,\r\n});\r\n\r\nconst handleIncrementRound = state => ({\r\n  ...state,\r\n  roundsState: {\r\n    ...state.roundsState,\r\n    currentRound: state.roundsState.currentRound + 1,\r\n  },\r\n});\r\n\r\nexport const roundsStateReducers = {\r\n  [IncrementRoundType]: handleIncrementRound,\r\n};\r\n","import { rollD, rollMultipleD } from '../../random';\r\nimport { currentRoundSelector } from '../rounds/roundsState';\r\n\r\nexport const variableInitialState = {\r\n  diceSize: undefined,\r\n  diceCount: undefined,\r\n  modifier: undefined,\r\n  result: undefined,\r\n  description: undefined,\r\n};\r\n\r\nexport const makeConstantVariable = (\r\n  value,\r\n  description = undefined,\r\n  type = undefined\r\n) => ({\r\n  ...variableInitialState,\r\n  diceSize: 0,\r\n  diceCount: 0,\r\n  modifier: value,\r\n  result: value,\r\n  description,\r\n  type,\r\n});\r\n\r\nexport const makeVariable = (\r\n  diceSize,\r\n  diceCount = 1,\r\n  modifier = 0,\r\n  description = undefined\r\n) => ({\r\n  ...variableInitialState,\r\n  diceSize: diceSize,\r\n  diceCount: diceCount,\r\n  modifier: modifier,\r\n  result: rollMultipleD(diceSize, diceCount, modifier),\r\n  description,\r\n});\r\n\r\nexport const makeLimitedVariable = (diceSize, limit) => ({\r\n  ...variableInitialState,\r\n  diceSize: diceSize,\r\n  result: Math.min(rollD(diceSize), limit),\r\n});\r\n\r\nexport const reRollVariable = variable => ({\r\n  ...variable,\r\n  result: rollMultipleD(\r\n    variable.diceSize,\r\n    variable.diceCount,\r\n    variable.modifier\r\n  ),\r\n});\r\n\r\nexport const primalEventInitialState = {\r\n  id: undefined,\r\n  percentileRoll: undefined,\r\n  cr: { ...variableInitialState },\r\n  startRound: undefined,\r\n  finalRound: undefined,\r\n  variables: [],\r\n  expanded: true,\r\n  triggerType: undefined,\r\n};\r\n\r\nexport const activePrimalEventsInitialState = [];\r\n\r\nexport const activePrimalEventsSelector = state =>\r\n  state.primalMagic.activePrimalEventsState.filter(\r\n    event => event.finalRound >= currentRoundSelector(state)\r\n  );\r\nexport const activePrimalEventSelector = id => state =>\r\n  activePrimalEventsSelector(state).find(primalEvent => primalEvent.id === id);\r\nexport const activePrimalEventIsExpandedSelector = id => state =>\r\n  activePrimalEventSelector(id)(state).expanded;\r\n\r\nconst ExpandAllEventsType = 'primalMagic:activePrimalEvents:expandAllEvents';\r\nconst CollapseAllEventsType =\r\n  'primalMagic:activePrimalEvents:collapseAllEvents';\r\nconst ToggleSingleExpandedType =\r\n  'primalMagic:activePrimalEvents:toggleSingleExpanded';\r\nconst AddActivePrimalEventType =\r\n  'primalMagic:activePrimalEvents:addActivePrimalEvent';\r\n\r\nexport const expandAll = () => ({\r\n  type: ExpandAllEventsType,\r\n});\r\n\r\nexport const collapseAll = () => ({\r\n  type: CollapseAllEventsType,\r\n});\r\n\r\nexport const toggleSingleExpanded = id => ({\r\n  type: ToggleSingleExpandedType,\r\n  payload: id,\r\n});\r\n\r\nexport const addActivePrimalEvent = primalEvent => ({\r\n  type: AddActivePrimalEventType,\r\n  payload: primalEvent,\r\n});\r\n\r\nconst copyState = state => ({\r\n  ...state,\r\n  activePrimalEventsState: [...state.activePrimalEventsState],\r\n});\r\n\r\nconst handleExpandAll = state => {\r\n  const newState = copyState(state);\r\n  newState.activePrimalEventsState = newState.activePrimalEventsState.map(\r\n    activePrimalEvent => ({ ...activePrimalEvent, expanded: true })\r\n  );\r\n\r\n  return newState;\r\n};\r\n\r\nconst handleCollapseAll = state => {\r\n  const newState = copyState(state);\r\n  newState.activePrimalEventsState = newState.activePrimalEventsState.map(\r\n    activePrimalEvent => ({ ...activePrimalEvent, expanded: false })\r\n  );\r\n\r\n  return newState;\r\n};\r\n\r\nconst handleToggleSingleExpanded = (state, payload) => {\r\n  const newState = copyState(state);\r\n  const match = newState.activePrimalEventsState.find(\r\n    activePrimalEvent => activePrimalEvent.id === payload\r\n  );\r\n\r\n  if (!match) {\r\n    return newState;\r\n  }\r\n\r\n  const matchIndex = newState.activePrimalEventsState.indexOf(match);\r\n  const matchToggled = { ...match, expanded: !match.expanded };\r\n  newState.activePrimalEventsState[matchIndex] = matchToggled;\r\n  return newState;\r\n};\r\n\r\nconst handleAddActivePrimalEvent = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.activePrimalEventsState.push(payload);\r\n  return newState;\r\n};\r\n\r\nexport const activePrimalEventsReducers = {\r\n  [ExpandAllEventsType]: handleExpandAll,\r\n  [CollapseAllEventsType]: handleCollapseAll,\r\n  [ToggleSingleExpandedType]: handleToggleSingleExpanded,\r\n  [AddActivePrimalEventType]: handleAddActivePrimalEvent,\r\n};\r\n","export const primalStormInitialState = {\r\n  active: false,\r\n  suppressed: false,\r\n  leftArea: false,\r\n  currentChance: 10,\r\n};\r\n\r\nexport const calculateIncrementAndMax = (suppressed, leftArea) => {\r\n  let increment = 10;\r\n  let max = 100;\r\n\r\n  if (suppressed) {\r\n    increment = 5;\r\n    max = 50;\r\n  }\r\n\r\n  if (leftArea) {\r\n    increment = 0;\r\n  }\r\n\r\n  return { increment, max };\r\n};\r\n\r\nexport const primalStormStateSelector = state =>\r\n  state.primalMagic.primalStormState;\r\nexport const primalStormActiveSelector = state =>\r\n  primalStormStateSelector(state).active;\r\nexport const primalStormSuppressedSelector = state =>\r\n  primalStormStateSelector(state).suppressed;\r\nexport const primalStormLeftAreaSelector = state =>\r\n  primalStormStateSelector(state).leftArea;\r\nexport const primalStormCurrentChanceSelector = state =>\r\n  primalStormStateSelector(state).currentChance;\r\n\r\nconst ResetStateType = 'primalMagic:primalStormState:resetStateType';\r\nconst SetActiveType = 'primalMagic:primalStormState:setActiveType';\r\nconst SetSuppressedType = 'primalMagic:primalStormState:setSuppressedType';\r\nconst SetLeftAreaType = 'primalMagic:primalStormState:setLeftAreaType';\r\nconst SetCurrentChanceType =\r\n  'primalMagic:primalStormState:setCurrentChanceType';\r\n\r\nexport const resetPrimalStormState = () => ({\r\n  type: ResetStateType,\r\n});\r\n\r\nexport const setPrimalStormActive = isActive => ({\r\n  type: SetActiveType,\r\n  payload: isActive,\r\n});\r\n\r\nexport const setPrimalStormSuppressed = isSuppressed => ({\r\n  type: SetSuppressedType,\r\n  payload: isSuppressed,\r\n});\r\n\r\nexport const setPrimalStormLeftArea = haveLeftArea => ({\r\n  type: SetLeftAreaType,\r\n  payload: haveLeftArea,\r\n});\r\n\r\nexport const setPrimalStormCurrentChance = chance => ({\r\n  type: SetCurrentChanceType,\r\n  payload: chance,\r\n});\r\n\r\nconst copyState = state => ({\r\n  ...state,\r\n  primalStormState: {\r\n    ...state.primalStormState,\r\n  },\r\n});\r\n\r\nconst handleResetPrimalStormState = state => ({\r\n  ...state,\r\n  primalStormState: {\r\n    ...primalStormInitialState,\r\n  },\r\n});\r\n\r\nconst handleSetPrimalStormActive = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.primalStormState.active = payload;\r\n  return newState;\r\n};\r\n\r\nconst handleSetPrimalStormSuppressed = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.primalStormState.suppressed = payload;\r\n  return newState;\r\n};\r\n\r\nconst handleSetPrimalStormLeftArea = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.primalStormState.leftArea = payload;\r\n  return newState;\r\n};\r\n\r\nconst handleSetPrimalStormCurrentChance = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.primalStormState.currentChance = payload;\r\n  return newState;\r\n};\r\n\r\nexport const primalStormStateReducers = {\r\n  [ResetStateType]: handleResetPrimalStormState,\r\n  [SetActiveType]: handleSetPrimalStormActive,\r\n  [SetSuppressedType]: handleSetPrimalStormSuppressed,\r\n  [SetLeftAreaType]: handleSetPrimalStormLeftArea,\r\n  [SetCurrentChanceType]: handleSetPrimalStormCurrentChance,\r\n};\r\n","export const manualTriggerType = 'MANUAL';\r\nexport const stormTrigerType = 'STORM';\r\n\r\nexport const triggerDialogInitialState = {\r\n  open: false,\r\n  triggerType: undefined,\r\n  percentile: 0,\r\n  threshold: 50,\r\n  cr: undefined,\r\n  currentEvent: undefined,\r\n};\r\n\r\nexport const triggerDialogStateSelector = state =>\r\n  state.primalMagic.triggerDialogState;\r\nexport const triggerDialogCurrentEventSelector = state =>\r\n  triggerDialogStateSelector(state).currentEvent;\r\n\r\nconst SetTriggerDialogStateType =\r\n  'primalMagic:triggerDialogState:setTriggerDialogState';\r\nconst SetTriggerDialogPrimalEventType =\r\n  'primalMagic:triggerDialogState:setTriggerDialogPrimalEvent';\r\nconst ToggleTriggerDialogPrimalEventExpandedType =\r\n  'primalMagic:triggerDialogState:toggleTriggerDialogPrimalEventExpanded';\r\nconst CloseTriggerDialogType =\r\n  'primalMagic:triggerDialogState:closeTriggerDialog';\r\n\r\nexport const setTriggerDialogState = triggerDialogState => ({\r\n  type: SetTriggerDialogStateType,\r\n  payload: triggerDialogState,\r\n});\r\n\r\nexport const setTriggerDialogPrimalEvent = primalEvent => ({\r\n  type: SetTriggerDialogPrimalEventType,\r\n  payload: primalEvent,\r\n});\r\n\r\nexport const toggleTriggerDialogPrimalEventExpanded = () => ({\r\n  type: ToggleTriggerDialogPrimalEventExpandedType,\r\n});\r\n\r\nexport const closeTriggerDialog = () => ({\r\n  type: CloseTriggerDialogType,\r\n});\r\n\r\nconst handleSetTriggerDialogState = (state, payload) => ({\r\n  ...state,\r\n  triggerDialogState: {\r\n    ...payload,\r\n  },\r\n});\r\n\r\nconst handleSetTriggerDialogPrimalEvent = (state, payload) => ({\r\n  ...state,\r\n  triggerDialogState: {\r\n    ...state.triggerDialogState,\r\n    currentEvent: payload,\r\n  },\r\n});\r\n\r\nconst handleToggleTriggerDialogPrimalEventExpanded = state => ({\r\n  ...state,\r\n  triggerDialogState: {\r\n    ...state.triggerDialogState,\r\n    currentEvent: {\r\n      ...state.triggerDialogState.currentEvent,\r\n      expanded: !state.triggerDialogState.currentEvent.expanded,\r\n    },\r\n  },\r\n});\r\n\r\nconst handleCloseTriggerDialog = state => ({\r\n  ...state,\r\n  triggerDialogState: {\r\n    ...triggerDialogInitialState,\r\n  },\r\n});\r\n\r\nexport const triggerDialogStateReducers = {\r\n  [SetTriggerDialogStateType]: handleSetTriggerDialogState,\r\n  [SetTriggerDialogPrimalEventType]: handleSetTriggerDialogPrimalEvent,\r\n  [ToggleTriggerDialogPrimalEventExpandedType]: handleToggleTriggerDialogPrimalEventExpanded,\r\n  [CloseTriggerDialogType]: handleCloseTriggerDialog,\r\n};\r\n","export const eventExpansionInitialState = {\r\n  allExpanded: true,\r\n};\r\n\r\nexport const allExpandedSelector = state =>\r\n  state.primalMagic.eventExpansionState.allExpanded;\r\n\r\nconst SetAllExpandedStateType =\r\n  'primalMagic:activePrimalEvents:setAllExpandedState';\r\n\r\nexport const setAllExpandedState = allExpanded => ({\r\n  type: SetAllExpandedStateType,\r\n  payload: allExpanded,\r\n});\r\n\r\nconst handleSetAllExpanded = (state, payload) => {\r\n  return {\r\n    ...state,\r\n    eventExpansionState: {\r\n      ...state.eventExpansionState,\r\n      allExpanded: payload,\r\n    },\r\n  };\r\n};\r\n\r\nexport const eventExpansionReducers = {\r\n  [SetAllExpandedStateType]: handleSetAllExpanded,\r\n};\r\n","export const userSettingsInitialState = {\r\n  eventsAlwaysTrigger: false,\r\n  alwaysSelectSameEvent: false,\r\n  eventAlwaysSelected: 'Colour Drain',\r\n  alwaysSelectSameRodResult: false,\r\n  rodOfWonderAlwaysSelected: 'Slow',\r\n  resetOnlyResetsRounds: false,\r\n};\r\n\r\nexport const userSettingsStateSelector = state =>\r\n  state.primalMagic.userSettingsState;\r\nexport const eventsAlwaysTriggerSelector = state =>\r\n  userSettingsStateSelector(state).eventsAlwaysTrigger;\r\nexport const alwaysSelectSameEventSelector = state =>\r\n  userSettingsStateSelector(state).alwaysSelectSameEvent;\r\nexport const eventAlwaysSelectedSelector = state =>\r\n  userSettingsStateSelector(state).eventAlwaysSelected;\r\nexport const alwaysSelectSameRodResultSelector = state =>\r\n  userSettingsStateSelector(state).alwaysSelectSameRodResult;\r\nexport const rodOfWonderAlwaysSelectedSelector = state =>\r\n  userSettingsStateSelector(state).rodOfWonderAlwaysSelected;\r\nexport const resetOnlyResetsRoundsSelector = state =>\r\n  userSettingsStateSelector(state).resetOnlyResetsRounds;\r\n\r\nconst SetEventsAlwaysTriggerType =\r\n  'primalMagic:userSettingsState:setEventsAlwaysTrigger';\r\nconst SetAlwaysSelectSameEventType =\r\n  'primalMagic:userSettingsState:setAlwaysSelectSameEvent';\r\nconst SetEventAlwaysSelectedType =\r\n  'primalMagic:userSettingsState:setEventAlwaysSelected';\r\nconst SetRodResultAlwaysSelectedType =\r\n  'primalMagic:userSettingsState:setRodResultAlwaysSelected';\r\nconst SetRodOfWonderAlwaysSelectedType =\r\n  'primalMagic:userSettingsState:setRodOfWonderAlwaysSelected';\r\nconst SetResetOnlyResetsRoundsType =\r\n  'primalMagic:userSettingsState:setResetOnlyResetsRounds';\r\n\r\nexport const setEventsAlwaysTrigger = shouldAlwaysTrigger => ({\r\n  type: SetEventsAlwaysTriggerType,\r\n  payload: shouldAlwaysTrigger,\r\n});\r\n\r\nexport const setAlwaysSelectSameEvent = alwaysSelectSame => ({\r\n  type: SetAlwaysSelectSameEventType,\r\n  payload: alwaysSelectSame,\r\n});\r\n\r\nexport const setEventAlwaysSelected = eventAlwaysSelected => ({\r\n  type: SetEventAlwaysSelectedType,\r\n  payload: eventAlwaysSelected,\r\n});\r\n\r\nexport const setAlwaysSelectSameRodResult = alwaysSelectSame => ({\r\n  type: SetRodResultAlwaysSelectedType,\r\n  payload: alwaysSelectSame,\r\n});\r\n\r\nexport const setRodOfWonderAlwaysSelected = rodOfWonderAlwaysSelected => ({\r\n  type: SetRodOfWonderAlwaysSelectedType,\r\n  payload: rodOfWonderAlwaysSelected,\r\n});\r\n\r\nexport const setResetOnlyResetsRounds = onlyResetsRounds => ({\r\n  type: SetResetOnlyResetsRoundsType,\r\n  payload: onlyResetsRounds,\r\n});\r\n\r\nconst copyState = state => ({\r\n  ...state,\r\n  userSettingsState: {\r\n    ...state.userSettingsState,\r\n  },\r\n});\r\n\r\nconst handleSetEventsAlwaysTrigger = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.userSettingsState.eventsAlwaysTrigger = payload;\r\n  return newState;\r\n};\r\n\r\nconst handleSetAlwaysSelectSameEvent = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.userSettingsState.alwaysSelectSameEvent = payload;\r\n  return newState;\r\n};\r\n\r\nconst handleSetEventAlwaysSelected = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.userSettingsState.eventAlwaysSelected = payload;\r\n  return newState;\r\n};\r\n\r\nconst handleSetAlwaysSelectSameRodResult = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.userSettingsState.alwaysSelectSameRodResult = payload;\r\n  return newState;\r\n};\r\n\r\nconst handleSetRodOfWonderAlwaysSelected = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.userSettingsState.rodOfWonderAlwaysSelected = payload;\r\n  return newState;\r\n};\r\n\r\nconst handleSetResetOnlyResetsRounds = (state, payload) => {\r\n  const newState = copyState(state);\r\n  newState.userSettingsState.resetOnlyResetsRounds = payload;\r\n  return newState;\r\n};\r\n\r\nexport const userSettingsStateReducers = {\r\n  [SetEventsAlwaysTriggerType]: handleSetEventsAlwaysTrigger,\r\n  [SetAlwaysSelectSameEventType]: handleSetAlwaysSelectSameEvent,\r\n  [SetEventAlwaysSelectedType]: handleSetEventAlwaysSelected,\r\n  [SetRodResultAlwaysSelectedType]: handleSetAlwaysSelectSameRodResult,\r\n  [SetRodOfWonderAlwaysSelectedType]: handleSetRodOfWonderAlwaysSelected,\r\n  [SetResetOnlyResetsRoundsType]: handleSetResetOnlyResetsRounds,\r\n};\r\n","import createReducer from './createReducer';\r\nimport {\r\n  manualTriggerInitialState,\r\n  manualTriggerStateReducers,\r\n} from '../manualTrigger/manualTriggerState';\r\nimport {\r\n  activePrimalEventsInitialState,\r\n  activePrimalEventsReducers,\r\n} from '../activePrimalEvents/activePrimalEventsState';\r\nimport {\r\n  primalStormInitialState,\r\n  primalStormStateReducers,\r\n} from '../primalStorm/primalStormState';\r\nimport {\r\n  triggerDialogInitialState,\r\n  triggerDialogStateReducers,\r\n} from '../triggerDialog/triggerDialogState';\r\nimport {\r\n  eventExpansionInitialState,\r\n  eventExpansionReducers,\r\n} from '../eventExpansionState/eventExpansionState';\r\nimport { roundsInitialState, roundsStateReducers } from '../rounds/roundsState';\r\nimport {\r\n  userSettingsInitialState,\r\n  userSettingsStateReducers,\r\n} from '../userSettings/userSetingsState';\r\n\r\nexport const initialState = {\r\n  activePrimalEventsState: [...activePrimalEventsInitialState],\r\n  eventExpansionState: {\r\n    ...eventExpansionInitialState,\r\n  },\r\n  manualTriggerState: {\r\n    ...manualTriggerInitialState,\r\n  },\r\n  primalStormState: {\r\n    ...primalStormInitialState,\r\n  },\r\n  roundsState: {\r\n    ...roundsInitialState,\r\n  },\r\n  triggerDialogState: {\r\n    ...triggerDialogInitialState,\r\n  },\r\n  userSettingsState: {\r\n    ...userSettingsInitialState,\r\n  },\r\n};\r\n\r\nconst ResetAllType = 'primalMagic:resetAll';\r\nconst ResetAllForceType = 'primalMagic:resetAllForce';\r\n\r\nexport const resetAll = () => ({\r\n  type: ResetAllType,\r\n});\r\n\r\nexport const resetPrimalMagic = () => ({\r\n  type: ResetAllForceType,\r\n});\r\n\r\nconst handleResetAll = state => {\r\n  if (state?.userSettingsState?.resetOnlyResetsRounds) {\r\n    return {\r\n      ...state,\r\n      roundsState: { ...roundsInitialState },\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...initialState,\r\n    userSettingsState: { ...state.userSettingsState },\r\n  };\r\n};\r\n\r\nexport const handleResetAllForce = () => {\r\n  return {\r\n    ...initialState,\r\n  };\r\n};\r\n\r\nconst PrimalMagicReducer = createReducer(initialState, {\r\n  [ResetAllType]: handleResetAll,\r\n  [ResetAllForceType]: handleResetAllForce,\r\n  ...eventExpansionReducers,\r\n  ...activePrimalEventsReducers,\r\n  ...manualTriggerStateReducers,\r\n  ...roundsStateReducers,\r\n  ...triggerDialogStateReducers,\r\n  ...userSettingsStateReducers,\r\n  ...primalStormStateReducers,\r\n});\r\n\r\nexport default PrimalMagicReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport primalMagicReducer from './primalMagic.reducer';\r\n\r\nconst AppReducer = history =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    primalMagic: primalMagicReducer,\r\n  });\r\n\r\nexport default AppReducer;\r\n","export default __webpack_public_path__ + \"static/media/primal_magic_image.bed55960.png\";","import {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport primalMagicImage from '../images/primal_magic_image.png';\r\nimport { resetPrimalMagic } from '../state/app/primalMagic.reducer';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100%',\r\n  },\r\n  cardHeader: {\r\n    textAlign: 'center',\r\n    paddingTop: 5,\r\n    paddingBottom: 5,\r\n  },\r\n  cardActions: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nconst Homepage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onResetClicked = () => {\r\n    dispatch(resetPrimalMagic());\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Card>\r\n        <CardHeader\r\n          className={classes.cardHeader}\r\n          title={'Primal Magic Utility'}\r\n        />\r\n        <NavLink to=\"/PrimalMagicTracker\">\r\n          <img src={primalMagicImage} />\r\n        </NavLink>\r\n        <CardActions className={classes.cardActions}>\r\n          <Button\r\n            component={NavLink}\r\n            variant=\"contained\"\r\n            to=\"/PrimalMagicTracker\"\r\n          >\r\n            Visit\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={onResetClicked}>\r\n            Reset Data\r\n          </Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\n\r\nconst styles = {\r\n  message: {\r\n    paddingLeft: 24,\r\n    paddingRight: 24,\r\n    paddingTop: 10,\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: 10,\r\n  },\r\n};\r\n\r\nconst BasicErrorMessage = ({ classes, children }) => (\r\n  <div className={classes.message}>\r\n    <ErrorIcon className={classes.icon} />\r\n    <Typography variant=\"body1\">{children}</Typography>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(BasicErrorMessage);\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  titleContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  icon: {\r\n    width: '10vw',\r\n    height: '10vw',\r\n    color: theme.palette.primary.main,\r\n  },\r\n  titleText: {\r\n    fontWeight: 'bold',\r\n    fontSize: '10vw',\r\n    color: theme.palette.primary.main,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  message: {\r\n    padding: 15,\r\n    maxWidth: 600,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nconst ErrorPage = ({ classes, children, errorTitle }) => (\r\n  <div>\r\n    <div className={classes.titleContainer}>\r\n      <Typography className={classes.titleText}>{errorTitle}</Typography>\r\n    </div>\r\n    <div className={classes.container}>{children}</div>\r\n  </div>\r\n);\r\n\r\nexport default withStyles(styles)(ErrorPage);\r\n","import React from 'react';\r\nimport BasicErrorMessage from './basicErrorMessage.component';\r\nimport ErrorPage from './errorPage.component';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst PageNotFoundError = () => (\r\n  <ErrorPage errorTitle=\"404\">\r\n    <BasicErrorMessage>\r\n      Page not found. Please check the page address for typos. Click{' '}\r\n      <NavLink to=\"/\">here</NavLink> to return to the home page.\r\n    </BasicErrorMessage>\r\n  </ErrorPage>\r\n);\r\n\r\nexport default PageNotFoundError;\r\n","import React from 'react';\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    paddingTop: 20,\r\n    paddingBottom: 20,\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    backgroundColor: ({ colour }) => colour,\r\n    color: 'white',\r\n    borderTopLeftRadius: 2,\r\n    borderTopRightRadius: 2,\r\n  },\r\n});\r\n\r\nconst BarHeader = ({ title, colour }) => {\r\n  const classes = useStyles({ colour });\r\n\r\n  return (\r\n    <Box className={classes.header}>\r\n      <Typography variant=\"h4\">{title}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BarHeader;\r\n","import { green, indigo, orange, purple, red } from '@material-ui/core/colors';\r\n\r\nexport const manualTriggerHeader = red[500];\r\nexport const manualTriggerHeaderEmphasis = red[600];\r\nexport const primalStormHeader = green[500];\r\nexport const primalStormHeaderEmphasis = green[600];\r\nexport const primalEventsHeader = indigo[500];\r\nexport const userSettingsHeader = orange[500];\r\nexport const eventActive = primalEventsHeader;\r\nexport const eventImminant = purple[500];\r\n","import React, { Fragment } from 'react';\r\n\r\nconst AonLink = ({ name, link, noHighlight }) => {\r\n  if (noHighlight) {\r\n    return (\r\n      <Fragment>\r\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {name}\r\n        </a>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <mark>\r\n        <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {name}\r\n        </a>\r\n      </mark>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAonLink.defaultProps = {\r\n  noHighlight: false,\r\n};\r\n\r\nexport default AonLink;\r\n","export const booleanToString = boolVal =>\n  boolVal === undefined ? '-' : boolVal ? 'true' : 'false';\n\nexport const objectToArrayString = (object, separator = '; ') => {\n  return Object.entries(object)\n    .map(([key, value]) => `${key}=${value}`)\n    .join(separator);\n};\n","import { makeStyles, Tooltip } from '@material-ui/core';\r\nimport { lightBlue } from '@material-ui/core/colors';\r\nimport React from 'react';\r\nimport { objectToArrayString } from './utils';\r\n\r\nconst useStyles = makeStyles({\r\n  mark: {\r\n    backgroundColor: ({ u }) =>\r\n      u?.includes('SAVE') ? 'yellow' : lightBlue[50],\r\n  },\r\n});\r\n\r\nexport const time = 'TIME';\r\nexport const dist = 'DISTANCE';\r\nexport const willSave = 'WILL_SAVE';\r\nexport const fortSave = 'FORT_SAVE';\r\nexport const reflexSave = 'REFLEX_SAVE';\r\nexport const strengthCheck = 'STRENGTH_CHECK';\r\nexport const cl = 'CASTER_LEVEL';\r\nexport const weight = 'WEIGHT';\r\nexport const direction = 'DIRECTION';\r\nexport const energy = 'ENERGY';\r\n\r\nconst energyTypes = {\r\n  1: 'acid',\r\n  2: 'cold',\r\n  3: 'electricity',\r\n  4: 'fire',\r\n};\r\n\r\nconst directions = {\r\n  1: 'north',\r\n  2: 'north east',\r\n  3: 'east',\r\n  4: 'south east',\r\n  5: 'south',\r\n  6: 'south west',\r\n  7: 'west',\r\n  8: 'north west',\r\n};\r\n\r\nconst getEnergy = variable => {\r\n  return {\r\n    value: energyTypes[variable.result],\r\n    unit: 'energy',\r\n  };\r\n};\r\n\r\nconst getDirection = variable => {\r\n  return {\r\n    value: directions[Math.floor(variable.result, 8)],\r\n  };\r\n};\r\n\r\nconst getWeight = variable => {\r\n  return {\r\n    value: variable.result,\r\n    unit: `lb${variable.result > 1 ? 's' : ''}`,\r\n  };\r\n};\r\n\r\nconst getCasterLevel = variable => {\r\n  return {\r\n    prefix: 'Caster Level',\r\n    value: variable.result,\r\n  };\r\n};\r\n\r\nconst getTime = variable => {\r\n  let value = variable.result;\r\n  let unit = `round${value > 1 ? 's' : ''}`;\r\n\r\n  if (value >= 24 * 60 * 10) {\r\n    value = Math.floor(value / (24 * 60 * 10));\r\n    unit = `day${value > 1 ? 's' : ''}`;\r\n  } else if (value >= 60 * 10) {\r\n    value = Math.floor(value / (60 * 10));\r\n    unit = `hour${value > 1 ? 's' : ''}`;\r\n  } else if (value > 20) {\r\n    value = Math.floor(value / 10);\r\n    unit = `minute${value > 1 ? 's' : ''}`;\r\n  }\r\n\r\n  return {\r\n    value,\r\n    unit,\r\n  };\r\n};\r\n\r\nconst getDist = variable => {\r\n  const value = variable.result;\r\n  const unit = 'ft.';\r\n\r\n  return {\r\n    value,\r\n    unit,\r\n  };\r\n};\r\n\r\nconst getSave = (variable, saveType, isCheck = false) => {\r\n  const value = variable.result;\r\n  const unit = `${saveType} ${isCheck ? 'Check' : 'Save'}`;\r\n\r\n  return {\r\n    prefix: 'DC ',\r\n    value,\r\n    unit,\r\n  };\r\n};\r\n\r\nconst getValues = (variable, unitType) => {\r\n  if (unitType === time) {\r\n    return getTime(variable);\r\n  }\r\n\r\n  if (unitType === dist) {\r\n    return getDist(variable);\r\n  }\r\n\r\n  if (unitType === willSave) {\r\n    return getSave(variable, 'Will');\r\n  }\r\n\r\n  if (unitType === fortSave) {\r\n    return getSave(variable, 'Fortitude');\r\n  }\r\n\r\n  if (unitType === reflexSave) {\r\n    return getSave(variable, 'Reflex');\r\n  }\r\n\r\n  if (unitType === strengthCheck) {\r\n    return getSave(variable, 'Strength', true);\r\n  }\r\n\r\n  if (unitType === cl) {\r\n    return getCasterLevel(variable);\r\n  }\r\n\r\n  if (unitType === weight) {\r\n    return getWeight(variable);\r\n  }\r\n\r\n  if (unitType === direction) {\r\n    return getDirection(variable);\r\n  }\r\n\r\n  if (unitType === energy) {\r\n    return getEnergy(variable);\r\n  }\r\n\r\n  return {\r\n    value: variable.result,\r\n    unit: undefined,\r\n  };\r\n};\r\n\r\nexport const getToolTip = (variable, unit) => {\r\n  if (variable.description) {\r\n    return variable.description;\r\n  }\r\n\r\n  if (unit === direction) {\r\n    return `1d8 [${variable.result}]: ${objectToArrayString(directions)}`;\r\n  }\r\n\r\n  if (unit === energy) {\r\n    return `1d4 [${variable.result}]: ${objectToArrayString(energyTypes)}`;\r\n  }\r\n\r\n  let modifier = `+ ${variable.modifier}`;\r\n\r\n  if (!variable.modifier) {\r\n    modifier = '';\r\n  } else if (variable.modifier < 0) {\r\n    modifier = `- ${variable.modifier}`;\r\n  }\r\n\r\n  return `${variable.diceCount}d${variable.diceSize} [${variable.result -\r\n    variable.modifier}] ${modifier}`;\r\n};\r\n\r\nconst VM = ({ v, u, h }) => {\r\n  const classes = useStyles({ u });\r\n  const { prefix, value, unit } = h?.getValues\r\n    ? h.getValues(v)\r\n    : getValues(v, u);\r\n  const toolTip = h?.getToolTip ? h.getToolTip(v) : getToolTip(v, u);\r\n  return (\r\n    <Tooltip title={toolTip} placement=\"left\">\r\n      <mark className={classes.mark}>\r\n        {!prefix ? null : `${prefix} `}\r\n        {value}\r\n        {!unit ? null : ` ${unit}`}\r\n      </mark>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nVM.defaultProps = {\r\n  u: undefined,\r\n  h: undefined,\r\n};\r\n\r\nexport default VM;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Condition = ({ name }) => {\r\n  return (\r\n    <Fragment>\r\n      <mark>\r\n        <a\r\n          href={`https://aonprd.com/Rules.aspx?Name=Conditions&Category=Combat#ctl00_MainContent_RulesResult:~:text=${name}:`}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {name}\r\n        </a>\r\n      </mark>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Condition;\r\n","import React, { Fragment } from 'react';\r\nimport Condition from '../../../common/conditionDisplay.component';\r\nimport VM, {\r\n  dist,\r\n  fortSave,\r\n  time,\r\n} from '../../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const blindingColours = {\r\n  percentileMin: 91,\r\n  percentileMax: 95,\r\n  title: 'Blinding Colours',\r\n  createVariables: () => ({\r\n    length: makeConstantVariable(40, '40 ft. length'),\r\n    width: makeConstantVariable(30, '30ft. width'),\r\n    duration: makeVariable(6),\r\n    save: makeConstantVariable(15, 'DC 15 Fortitude Save', 'Fort Save'),\r\n  }),\r\n};\r\n\r\nconst BlindingColoursEvent = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Shimmering colours dance and play over a{' '}\r\n      <VM v={variables.length} u={dist} /> by{' '}\r\n      <VM v={variables.width} u={dist} /> area in front of the rod. Creatures\r\n      therein are <Condition name=\"Blinded\" /> for{' '}\r\n      <VM v={variables.duration} u={time} /> (\r\n      <VM v={variables.save} u={fortSave} /> negates)\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BlindingColoursEvent;\r\n","import React, { Fragment } from 'react';\r\nimport Condition from '../../../common/conditionDisplay.component';\r\nimport VM, {\r\n  dist,\r\n  reflexSave,\r\n  time,\r\n} from '../../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const butterflyStream = {\r\n  percentileMin: 47,\r\n  percentileMax: 49,\r\n  title: 'Butterfly Stream',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(2, '2 rounds'),\r\n    radius: makeConstantVariable(25, '25ft. radius'),\r\n    butteflyCount: makeVariable(100, 2, 400),\r\n    save: makeConstantVariable(14, 'DC 14 Reflex Save', 'Reflex Save'),\r\n  }),\r\n};\r\n\r\nconst ButterflyStreamResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      A stream of <VM v={variables.butteflyCount} /> butterflies pours forth and\r\n      flutters around for <VM v={variables.duration} u={time} />, causing\r\n      everyone within a <VM v={variables.radius} u={dist} /> radius to become{' '}\r\n      <Condition name=\"Blinded\" /> while the butterfies block vision (\r\n      <VM v={variables.save} u={reflexSave} /> negates)\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ButterflyStreamResult;\r\n","import React, { Fragment } from 'react';\r\nimport { objectToArrayString } from '../../../common/utils';\r\nimport VM from '../../../common/variableMark.component';\r\nimport { makeVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const colourChange = {\r\n  percentileMin: 96,\r\n  percentileMax: 97,\r\n  title: 'Colour Change',\r\n  createVariables: () => ({\r\n    target: makeVariable(2),\r\n    colour: makeVariable(3),\r\n  }),\r\n};\r\n\r\nconst targets = {\r\n  1: 'wielder',\r\n  2: 'target',\r\n};\r\n\r\nconst handleTargets = {\r\n  getValues: variable => {\r\n    return {\r\n      value: targets[variable.result],\r\n    };\r\n  },\r\n  getToolTip: variable => {\r\n    return `1d2 [${variable.result}]: ${objectToArrayString(targets)}`;\r\n  },\r\n};\r\n\r\nconst colours = {\r\n  1: 'blue',\r\n  2: 'green',\r\n  3: 'purple',\r\n};\r\n\r\nconst handleColours = {\r\n  getValues: variable => {\r\n    return {\r\n      value: colours[variable.result],\r\n    };\r\n  },\r\n  getToolTip: variable => {\r\n    return `1d3 [${variable.result}]: ${objectToArrayString(colours)}`;\r\n  },\r\n};\r\n\r\nconst ColourChangeResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      The <VM v={variables.target} h={handleTargets} /> turns permanently{' '}\r\n      <VM v={variables.colour} h={handleColours} /> (no save).\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ColourChangeResult;\r\n","import React, { Fragment } from 'react';\r\nimport VM, { cl, time } from './variableMark.component';\r\n\r\nconst Spell = ({ name, linkName, casterLevel, save, saveType, duration }) => {\r\n  return (\r\n    <Fragment>\r\n      <a\r\n        href={`https://aonprd.com/SpellDisplay.aspx?ItemName=${encodeURIComponent(\r\n          linkName ?? name\r\n        )}`}\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        {name}\r\n      </a>{' '}\r\n      spell (<VM v={casterLevel} u={cl} />\r\n      {duration || save ? '; ' : ''}\r\n      {duration && <VM v={duration} u={time} />}\r\n      {duration && save ? '; ' : ''}\r\n      {save && <VM v={save} u={saveType} />})\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSpell.defaultProps = {\r\n  linkName: undefined,\r\n  save: undefined,\r\n  duration: undefined,\r\n};\r\n\r\nexport default Spell;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport VM, { direction, dist } from '../../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const darkness = {\r\n  percentileMin: 54,\r\n  percentileMax: 58,\r\n  title: 'Darkness',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(10, '10 rounds'),\r\n    diameter: makeConstantVariable(30, '30ft diameter'),\r\n    distance: makeConstantVariable(30, '30ft away'),\r\n    cardinalDirection: makeVariable(8),\r\n  }),\r\n};\r\n\r\nconst DarknessResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      A <VM v={variables.diameter} u={dist} /> diameter hemisphere of the{' '}\r\n      <Spell\r\n        name=\"Darkness\"\r\n        casterLevel={variables.casterLevel}\r\n        duration={variables.duration}\r\n      />{' '}\r\n      appears <VM v={variables.distance} u={dist} /> to the{' '}\r\n      <VM v={variables.cardinalDirection} u={direction} /> of the rod\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DarknessResult;\r\n","import React, { Fragment } from 'react';\r\nimport AonLink from '../../../common/linkDisplay.component';\r\nimport VM, { time } from '../../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const delusion = {\r\n  percentileMin: 11,\r\n  percentileMax: 15,\r\n  title: 'Delusion',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(1, '1 round'),\r\n    secondDieRoll: makeVariable(100),\r\n  }),\r\n};\r\n\r\nconst DelusionResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Deludes the wielder for <VM v={variables.duration} u={time} /> into\r\n      believing the rod functions as if they had rolled a{' '}\r\n      <VM v={variables.secondDieRoll} /> on the{' '}\r\n      <AonLink\r\n        name=\"Rod of Wonder table\"\r\n        link=\"https://aonprd.com/MagicRodsDisplay.aspx?FinalName=Rod%20of%20Wonder\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DelusionResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport VM, { time } from '../../../common/variableMark.component';\r\nimport { makeVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const detectThoughts = {\r\n  percentileMin: 21,\r\n  percentileMax: 25,\r\n  title: 'Detect Thoughts',\r\n  createVariables: () => ({\r\n    duration: makeVariable(4),\r\n  }),\r\n};\r\n\r\nconst DetectThoughtsResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Wielder learns the target&apos;s surface thoughts (as with{' '}\r\n      <Spell name=\"Detect Thoughts\" casterLevel={variables.casterLevel} />) for{' '}\r\n      <VM v={variables.duration} u={time} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DetectThoughtsResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport VM, { dist, fortSave } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const enlargePerson = {\r\n  percentileMin: 50,\r\n  percentileMax: 53,\r\n  title: 'Enlarge Person',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(10, '10 rounds'),\r\n    distance: makeConstantVariable(60, 'within 60ft'),\r\n    save: makeConstantVariable(13, 'DC 13 Fortitude Save', 'Fort Save'),\r\n  }),\r\n};\r\n\r\nconst EnlargePersonResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Target is affected by{' '}\r\n      <Spell\r\n        name=\"Enlarge Person\"\r\n        casterLevel={variables.casterLevel}\r\n        save={variables.save}\r\n        saveType={fortSave}\r\n        duration={variables.duration}\r\n      />{' '}\r\n      if within <VM v={variables.distance} u={dist} /> of the rod\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EnlargePersonResult;\r\n","import { makeStyles, Tooltip } from '@material-ui/core';\r\nimport { lightBlue } from '@material-ui/core/colors';\r\nimport React, { Fragment } from 'react';\r\nimport VM, { dist, weight } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nconst useStyles = makeStyles({\r\n  mark: {\r\n    backgroundColor: lightBlue[50],\r\n  },\r\n});\r\n\r\nexport const etherealObject = {\r\n  percentileMin: 63,\r\n  percentileMax: 65,\r\n  title: 'Ethereal Object',\r\n  createVariables: () => ({\r\n    mass: makeConstantVariable(1000, '1,000 lbs of mass'),\r\n    volume: makeConstantVariable(30, '30 cubic feet'),\r\n  }),\r\n};\r\n\r\nconst EtherealObjectResult = ({ variables }) => {\r\n  const classes = useStyles();\r\n\r\n  const etherealTooltip =\r\n    'An ethereal object is invisible, insubstantial, and exists on the Ethereal plane. ' +\r\n    'Creatures and solid objects on the Material plane can move through ethereal objects. ' +\r\n    'Force effects and abjurations affect ethereal objects normally, their effects extend onto ' +\r\n    'the Ethereal plane from the Material plane but not vice versa. ' +\r\n    'Certain material creatures or objects have attacks or effects that work on the Ethereal plane';\r\n\r\n  return (\r\n    <Fragment>\r\n      Any non-living object of up to <VM v={variables.mass} u={weight} /> of\r\n      mass and up to <VM v={variables.volume} u={dist} /> cube in size turns{' '}\r\n      <Tooltip title={etherealTooltip} placement=\"left\">\r\n        <mark className={classes.mark}>Ethereal</mark>\r\n      </Tooltip>\r\n      .\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EtherealObjectResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const faerieFire = {\r\n  percentileMin: 6,\r\n  percentileMax: 10,\r\n  title: 'Faerie Fire',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(10 * 10, 'Rod CL = 10; 10 minutes'),\r\n    save: makeConstantVariable(15, 'DC 15 Will Save', 'Will Save'),\r\n  }),\r\n};\r\n\r\nconst FaerieFireResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      <Spell\r\n        name=\"Faerie Fire\"\r\n        casterLevel={variables.casterLevel}\r\n        duration={variables.duration}\r\n      />{' '}\r\n      surrounds the target.\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FaerieFireResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport VM, { dist, reflexSave } from '../../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const fireball = {\r\n  percentileMin: 70,\r\n  percentileMax: 79,\r\n  title: 'Fireball',\r\n  createVariables: () => ({\r\n    save: makeConstantVariable(15, 'DC 15 Reflex Save', 'Reflex Save'),\r\n    distance: makeConstantVariable(100, '100ft straight ahead'),\r\n    damage: makeVariable(6, 6),\r\n  }),\r\n};\r\n\r\nconst FireballResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      The wielder fires a{' '}\r\n      <Spell\r\n        name=\"Fireball\"\r\n        casterLevel={variables.casterLevel}\r\n        save={variables.save}\r\n        saveType={reflexSave}\r\n      />{' '}\r\n      straight ahead up to <VM v={variables.distance} u={dist} /> dealing{' '}\r\n      <VM v={variables.damage} /> points of damage.\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FireballResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport VM, { dist, fortSave } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const fleshToStone = {\r\n  percentileMin: 98,\r\n  percentileMax: 100,\r\n  title: 'Flesh to Stone',\r\n  createVariables: () => ({\r\n    distance: makeConstantVariable(60, '60ft. away'),\r\n    save: makeConstantVariable(18, 'DC 18 Fortitude', 'Fort Save'),\r\n  }),\r\n};\r\n\r\nconst FleshToStoneResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      The target is affected by a{' '}\r\n      <Spell\r\n        name=\"Flesh to Stone\"\r\n        casterLevel={variables.casterLevel}\r\n        save={variables.save}\r\n        saveType={fortSave}\r\n      />{' '}\r\n      (or stone to flesh, if the target is already stone) as long as they are\r\n      within <VM v={variables.distance} u={dist} /> of the wielder.\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FleshToStoneResult;\r\n","import React, { Fragment } from 'react';\r\nimport VM, { dist } from '../../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const gems = {\r\n  percentileMin: 88,\r\n  percentileMax: 90,\r\n  title: 'Gems',\r\n  createVariables: () => ({\r\n    gemCount: makeVariable(10, 3, 10),\r\n    distance: makeConstantVariable(30, '30ft long stream'),\r\n    damage: makeConstantVariable(1, '1 damage'),\r\n    numberOfHits: makeVariable(4, 5),\r\n  }),\r\n};\r\n\r\nconst GemsResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      <VM v={variables.gemCount} /> gemstones, <mark>valued at 1gp each</mark>,\r\n      shoot forth from the rod in a <VM v={variables.distance} u={dist} /> long\r\n      stream. <VM v={variables.numberOfHits} /> of these gemstones{' '}\r\n      <mark>hit creatures along the path</mark>. Divide these hits evenly among\r\n      the available targets to determine the damage each creature takes.\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GemsResult;\r\n","import React, { Fragment } from 'react';\r\nimport VM, { dist } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const grass = {\r\n  percentileMin: 59,\r\n  percentileMax: 62,\r\n  title: 'Grass',\r\n  createVariables: () => ({\r\n    area: makeConstantVariable(160, '160ft. square'),\r\n    existingGrowthAmount: makeConstantVariable(10, '10x normal size'),\r\n  }),\r\n};\r\n\r\nconst GrassResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Grass grows in a <VM v={variables.area} u={dist} /> square immediately in\r\n      front of the rod, or any existing grass there grows to{' '}\r\n      <VM v={variables.existingGrowthAmount} /> times its normal size.\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GrassResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport { fortSave } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const gustOfWind = {\r\n  percentileMin: 16,\r\n  percentileMax: 20,\r\n  title: 'Gust of Wind',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(1, '1 round'),\r\n    save: makeConstantVariable(14, 'DC 14 Fortitude Save', 'Fort Save'),\r\n  }),\r\n};\r\n\r\nconst GustOfWindResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      <Spell\r\n        name=\"Gust of Wind\"\r\n        casterLevel={variables.casterLevel}\r\n        save={variables.save}\r\n        saveType={fortSave}\r\n        duration={variables.duration}\r\n      />\r\n      , but at <mark>windstorm</mark> force\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default GustOfWindResult;\r\n","import React, { Fragment } from 'react';\r\nimport AonLink from '../../../common/linkDisplay.component';\r\nimport VM, { dist, time } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const heavyRain = {\r\n  percentileMin: 31,\r\n  percentileMax: 33,\r\n  title: 'Heavy Rain',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(1, '1 round'),\r\n    radius: makeConstantVariable(60, '60ft. Radius'),\r\n  }),\r\n};\r\n\r\nconst HeavyRainResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      <AonLink\r\n        link=\"https://aonprd.com/Rules.aspx?Name=Rain,%20Snow,%20Sleet,%20and%20Hail&Category=Weather#ctl00_MainContent_RulesResult:~:text=Rain:\"\r\n        name=\"Heavy Rain\"\r\n      />{' '}\r\n      falls for <VM v={variables.duration} u={time} /> in a{' '}\r\n      <VM v={variables.radius} u={dist} /> radius centered on the rod wielder\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HeavyRainResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const invisibility = {\r\n  percentileMin: 80,\r\n  percentileMax: 84,\r\n  title: 'Invisibility',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(10 * 10, '10 minutes'),\r\n  }),\r\n};\r\n\r\nconst InvisibilityResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      The wielder turns invisible as per the{' '}\r\n      <Spell\r\n        name=\"Invisibility\"\r\n        casterLevel={variables.casterLevel}\r\n        duration={variables.duration}\r\n      />\r\n      .\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InvisibilityResult;\r\n","import React, { Fragment } from 'react';\r\nimport VM, { dist, time } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const leaves = {\r\n  percentileMin: 85,\r\n  percentileMax: 87,\r\n  title: 'Leaves',\r\n  createVariables: () => ({\r\n    distance: makeConstantVariable(60, '60ft.'),\r\n    duration: makeConstantVariable(24 * 60 * 10, '1 day'),\r\n  }),\r\n};\r\n\r\nconst LeavesResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Leaves grows from the target&apos;s body, if the target is within{' '}\r\n      <VM v={variables.distance} u={dist} />. These last for{' '}\r\n      <VM v={variables.duration} u={time} />.\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LeavesResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport VM, { reflexSave } from '../../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const lightningBolt = {\r\n  percentileMin: 37,\r\n  percentileMax: 46,\r\n  title: 'Lightning Bolt',\r\n  createVariables: () => ({\r\n    length: makeConstantVariable(70, '70ft. long'),\r\n    damage: makeVariable(6, 6),\r\n    save: makeConstantVariable(15, 'DC 15 Reflex Save', 'Reflex Save'),\r\n  }),\r\n};\r\n\r\nconst LightningBoltEvent = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      <Spell\r\n        name=\"Lightning Bolt\"\r\n        casterLevel={variables.casterLevel}\r\n        save={variables.save}\r\n        saveType={reflexSave}\r\n      />{' '}\r\n      dealing <VM v={variables.damage} /> damage\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default LightningBoltEvent;\r\n","import React, { Fragment } from 'react';\r\nimport VM, { time } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const reduceWielder = {\r\n  percentileMin: 66,\r\n  percentileMax: 69,\r\n  title: 'Reduce Wielder',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(24 * 60 * 10, '1 day'),\r\n  }),\r\n};\r\n\r\nconst ReduceWielderResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Reduce the wielder two size categories <mark>(no save)</mark> for{' '}\r\n      <VM v={variables.duration} u={time} />.\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ReduceWielderResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport { willSave } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const slow = {\r\n  percentileMin: 1,\r\n  percentileMax: 5,\r\n  title: 'Slow',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(10, 'Rod CL = 10; 10 minutes'),\r\n    save: makeConstantVariable(15, 'DC 15 Will Save', 'Will Save'),\r\n  }),\r\n};\r\n\r\nconst SlowResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Target affected by a{' '}\r\n      <Spell\r\n        name=\"Slow\"\r\n        casterLevel={variables.casterLevel}\r\n        save={variables.save}\r\n        saveType={willSave}\r\n        duration={variables.duration}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SlowResult;\r\n","import React, { Fragment } from 'react';\r\nimport Spell from '../../../common/spellDisplay.component';\r\nimport VM, { dist, fortSave } from '../../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const stinkingCloud = {\r\n  percentileMin: 26,\r\n  percentileMax: 30,\r\n  title: 'Stinking Cloud',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(10, 'Rod CL = 10; 10 rounds'),\r\n    distance: makeConstantVariable(30, '30-foot range'),\r\n    save: makeConstantVariable(15, 'DC 15 Fortitude Save', 'Fort Save'),\r\n  }),\r\n};\r\n\r\nconst StinkingCloudResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      <Spell\r\n        name=\"Stinking Cloud\"\r\n        casterLevel={variables.casterLevel}\r\n        save={variables.save}\r\n        saveType={fortSave}\r\n        duration={variables.duration}\r\n      />{' '}\r\n      appears at a <VM v={variables.distance} u={dist} /> range.\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default StinkingCloudResult;\r\n","import React, { Fragment } from 'react';\r\nimport AonLink from '../../../common/linkDisplay.component';\r\nimport VM from '../../../common/variableMark.component';\r\nimport { makeVariable } from '../../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const summonAnimal = {\r\n  percentileMin: 34,\r\n  percentileMax: 36,\r\n  title: 'Summon Animal',\r\n  createVariables: () => ({\r\n    animalSummonPercentile: makeVariable(100),\r\n  }),\r\n};\r\n\r\nconst handleAnimalType = {\r\n  getValues: variable => {\r\n    if (variable.result <= 25) {\r\n      return {\r\n        value: (\r\n          <Fragment>\r\n            a{' '}\r\n            <AonLink\r\n              link=\"https://aonprd.com/MonsterDisplay.aspx?ItemName=Rhinoceros\"\r\n              name=\"rhino\"\r\n              noHighlight\r\n            />\r\n          </Fragment>\r\n        ),\r\n      };\r\n    }\r\n\r\n    if (variable.result <= 50) {\r\n      return {\r\n        value: (\r\n          <Fragment>\r\n            an{' '}\r\n            <AonLink\r\n              link=\"https://aonprd.com/MonsterDisplay.aspx?ItemName=Elephant\"\r\n              name=\"elephant\"\r\n              noHighlight\r\n            />\r\n          </Fragment>\r\n        ),\r\n      };\r\n    }\r\n\r\n    return {\r\n      value: (\r\n        <Fragment>\r\n          a{' '}\r\n          <AonLink\r\n            link=\"https://aonprd.com/MonsterDisplay.aspx?ItemName=Rat\"\r\n            name=\"mouse\"\r\n            noHighlight\r\n          />\r\n        </Fragment>\r\n      ),\r\n    };\r\n  },\r\n  getToolTip: variable => {\r\n    return `1d% [${variable.result}]: 01-25=rhino; 26-50=elephant; 51-100=mouse`;\r\n  },\r\n};\r\n\r\nconst SummonAnimalResult = ({ variables }) => {\r\n  return (\r\n    <Fragment>\r\n      Summons <VM v={variables.animalSummonPercentile} h={handleAnimalType} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SummonAnimalResult;\r\n","import React from 'react';\r\nimport BlindingColoursEvent, {\r\n  blindingColours,\r\n} from './blindingColoursResult.component';\r\nimport ButterflyStreamResult, {\r\n  butterflyStream,\r\n} from './butterflyStreamResult.component';\r\nimport ColourChangeResult, {\r\n  colourChange,\r\n} from './colourChangeResult.component';\r\nimport DarknessResult, { darkness } from './darknessResult.component';\r\nimport DelusionResult, { delusion } from './delusionResult.component';\r\nimport DetectThoughtsResult, {\r\n  detectThoughts,\r\n} from './detectThoughtsResult.component';\r\nimport EnlargePersonResult, {\r\n  enlargePerson,\r\n} from './enlargePersonResult.component';\r\nimport EtherealObjectResult, {\r\n  etherealObject,\r\n} from './etherealObjectResult.component';\r\nimport FaerieFireResult, { faerieFire } from './faerieFireResult.component';\r\nimport FireballResult, { fireball } from './fireballResult.component';\r\nimport FleshToStoneResult, {\r\n  fleshToStone,\r\n} from './fleshToStoneResult.component';\r\nimport GemsResult, { gems } from './gemsResult.component';\r\nimport GrassResult, { grass } from './grassResult.component';\r\nimport GustOfWindResult, { gustOfWind } from './gustOfWindResult.component';\r\nimport HeavyRainResult, { heavyRain } from './heavyRainResult.component';\r\nimport InvisibilityResult, {\r\n  invisibility,\r\n} from './invisibilityResult.component';\r\nimport LeavesResult, { leaves } from './leavesResult.component';\r\nimport LightningBoltEvent, {\r\n  lightningBolt,\r\n} from './lightningBoltResult.component';\r\nimport ReduceWielderResult, {\r\n  reduceWielder,\r\n} from './reduceWielderResult.component';\r\nimport SlowResult, { slow } from './slowResult.component';\r\nimport StinkingCloudResult, { stinkingCloud } from './stinkingCloud.component';\r\nimport SummonAnimalResult, {\r\n  summonAnimal,\r\n} from './summonAnimalResult.component';\r\n\r\nexport const getRodOfWonderComponent = (rodResult, variables) => {\r\n  if (rodResult.title === slow.title) {\r\n    return <SlowResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === faerieFire.title) {\r\n    return <FaerieFireResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === delusion.title) {\r\n    return <DelusionResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === gustOfWind.title) {\r\n    return <GustOfWindResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === detectThoughts.title) {\r\n    return <DetectThoughtsResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === stinkingCloud.title) {\r\n    return <StinkingCloudResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === heavyRain.title) {\r\n    return <HeavyRainResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === summonAnimal.title) {\r\n    return <SummonAnimalResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === lightningBolt.title) {\r\n    return <LightningBoltEvent variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === butterflyStream.title) {\r\n    return <ButterflyStreamResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === enlargePerson.title) {\r\n    return <EnlargePersonResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === darkness.title) {\r\n    return <DarknessResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === grass.title) {\r\n    return <GrassResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === etherealObject.title) {\r\n    return <EtherealObjectResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === reduceWielder.title) {\r\n    return <ReduceWielderResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === fireball.title) {\r\n    return <FireballResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === invisibility.title) {\r\n    return <InvisibilityResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === leaves.title) {\r\n    return <LeavesResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === gems.title) {\r\n    return <GemsResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === blindingColours.title) {\r\n    return <BlindingColoursEvent variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === colourChange.title) {\r\n    return <ColourChangeResult variables={variables} />;\r\n  }\r\n\r\n  if (rodResult.title === fleshToStone.title) {\r\n    return <FleshToStoneResult variables={variables} />;\r\n  }\r\n\r\n  return <div>UNKNOWN ROD OF WONDER RESULT {rodResult.title}</div>;\r\n};\r\n\r\nexport const rodOfWonderResults = [\r\n  slow,\r\n  faerieFire,\r\n  delusion,\r\n  gustOfWind,\r\n  detectThoughts,\r\n  stinkingCloud,\r\n  heavyRain,\r\n  summonAnimal,\r\n  lightningBolt,\r\n  butterflyStream,\r\n  enlargePerson,\r\n  darkness,\r\n  grass,\r\n  etherealObject,\r\n  reduceWielder,\r\n  fireball,\r\n  invisibility,\r\n  leaves,\r\n  gems,\r\n  blindingColours,\r\n  colourChange,\r\n  fleshToStone,\r\n];\r\n\r\nexport const getRodResult = percentileRoll => {\r\n  const results = rodOfWonderResults.filter(\r\n    e => percentileRoll >= e.percentileMin && percentileRoll <= e.percentileMax\r\n  );\r\n\r\n  if (results.length === 0) {\r\n    return rodOfWonderResults[0];\r\n  }\r\n\r\n  return results[0];\r\n};\r\n\r\nexport const getRodResultByTitle = title => {\r\n  const results = rodOfWonderResults.filter(e => e.title === title);\r\n\r\n  if (results.length === 0) {\r\n    return rodOfWonderResults[0];\r\n  }\r\n\r\n  return results[0];\r\n};\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport AonLink from '../../common/linkDisplay.component';\r\nimport VM from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\nimport {\r\n  getRodOfWonderComponent,\r\n  getRodResult,\r\n  getRodResultByTitle,\r\n} from './rodOfWonderResults/rodOfWonderResults';\r\n\r\nexport const wonderousMagic = {\r\n  table: 1,\r\n  percentileMin: 79,\r\n  percentileMax: 88,\r\n  title: 'Wonderous Magic',\r\n  createVariables: (_, rodOfWonderEventAlwaysSelected) => {\r\n    const match = rodOfWonderEventAlwaysSelected\r\n      ? getRodResultByTitle(rodOfWonderEventAlwaysSelected)\r\n      : undefined;\r\n    const rodOfWonderPercentile = makeVariable(100);\r\n\r\n    if (match) {\r\n      rodOfWonderPercentile.result = match.percentileMin;\r\n    }\r\n\r\n    const rodOfWonderVariables = getRodResult(\r\n      rodOfWonderPercentile.result\r\n    ).createVariables();\r\n\r\n    return {\r\n      duration: makeConstantVariable(0), // May get over-written by the specific rod result\r\n      casterLevel: makeConstantVariable(10, 'Rod CL = 10'),\r\n      rodOfWonderPercentile,\r\n      ...rodOfWonderVariables,\r\n    };\r\n  },\r\n};\r\n\r\nconst WonderousMagicEvent = ({ event }) => {\r\n  const { variables } = event;\r\n  const { rodOfWonderPercentile } = variables;\r\n\r\n  const rodResult = getRodResult(rodOfWonderPercentile.result);\r\n  const rodComponent = getRodOfWonderComponent(rodResult, variables);\r\n\r\n  return (\r\n    <Typography>\r\n      Choose two random creatures in the area, then randomly pick one to be the\r\n      &quot;wielder&quot; and one to be the &quot;target&quot;. A roll of{' '}\r\n      <VM v={rodOfWonderPercentile} /> on the{' '}\r\n      <AonLink\r\n        name=\"Rod of Wonder table\"\r\n        link=\"https://aonprd.com/MagicRodsDisplay.aspx?FinalName=Rod%20of%20Wonder\"\r\n      />{' '}\r\n      has determined the strange effect that occurs between these two creatures:{' '}\r\n      <br /> <br />\r\n      {rodComponent}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default WonderousMagicEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Condition from '../../common/conditionDisplay.component';\r\nimport VM, { dist, time, willSave } from '../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const auroraBorealis = {\r\n  table: 1,\r\n  percentileMin: 55,\r\n  percentileMax: 62,\r\n  title: 'Aurora Borealis',\r\n  createVariables: cr => ({\r\n    radius: makeConstantVariable(cr * 10, 'CR x 10ft.'),\r\n    save: makeConstantVariable(cr + 10, 'Will Save DC = CR + 10', 'Will Save'),\r\n    duration: makeConstantVariable(cr, 'CR rounds'),\r\n  }),\r\n};\r\n\r\nconst AuroraBorealisEvent = ({ event }) => {\r\n  const { radius, duration, save } = event.variables;\r\n  return (\r\n    <Typography>\r\n      Strange, shifting curtains of colour, akin to an aurora borealis, manifest\r\n      in the sky but are visible only to those in a <VM v={radius} u={dist} />{' '}\r\n      radius. Every creature in this area must make a{' '}\r\n      <VM v={save} u={willSave} /> or become <Condition name=\"Dazed\" /> by the\r\n      shifting colours <mark>for 1 round</mark>. The colours persist for{' '}\r\n      <VM v={duration} u={time} />. Creatures must make a{' '}\r\n      <mark>new save each round</mark> to avoid becoming dazed. This is a\r\n      mind-affecting effect.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default AuroraBorealisEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Spell from '../../common/spellDisplay.component';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const blackTentacles = {\r\n  table: 2,\r\n  percentileMin: 13,\r\n  percentileMax: 25,\r\n  title: 'Black Tentacles',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(cr, 'CL = CR'),\r\n    casterLevel: makeConstantVariable(cr, 'CL = CR'),\r\n  }),\r\n};\r\n\r\nconst BlackTentaclesEvent = ({ event }) => {\r\n  const { duration, casterLevel } = event.variables;\r\n  return (\r\n    <Typography>\r\n      The ground lurches to life and attacks creatures in the area as though\r\n      with the{' '}\r\n      <Spell\r\n        name=\"Black Tentacles\"\r\n        casterLevel={casterLevel}\r\n        duration={duration}\r\n      />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default BlackTentaclesEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, { dist, time } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const boomingCannons = {\r\n  table: 2,\r\n  percentileMin: 26,\r\n  percentileMax: 38,\r\n  title: 'Booming Cannons',\r\n  createVariables: cr => ({\r\n    radius: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n    duration: makeVariable(6),\r\n    misfire: makeVariable(3),\r\n  }),\r\n};\r\n\r\nconst BoomingCannonsEvent = ({ event }) => {\r\n  const { radius, duration, misfire } = event.variables;\r\n  return (\r\n    <Typography>\r\n      The sound of booming cannons fills the air, and all <mark>firearms</mark>{' '}\r\n      in a <VM v={radius} u={dist} /> radius spread{' '}\r\n      <mark>increase their misfire chance</mark> by <VM v={misfire} /> for{' '}\r\n      <VM v={duration} u={time} />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default BoomingCannonsEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { objectToArrayString } from '../../common/utils';\r\nimport VM, { time } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const catchyMusic = {\r\n  table: 1,\r\n  percentileMin: 11,\r\n  percentileMax: 14,\r\n  title: 'Catchy Music',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(cr * 10, 'CR mins'),\r\n    chantType: makeVariable(4), // 1d4; 1=Ulfen battle chants, 2=Chelish opera arias, 3=Desnan Prayers, 4=Vudrani monastic chants\r\n  }),\r\n};\r\n\r\nconst battleChants = {\r\n  1: 'Ulfen battle chants',\r\n  2: 'Chelish opera arias',\r\n  3: 'Desnan prayers',\r\n  4: 'Vudrani monastic chants',\r\n};\r\n\r\nconst handleChant = {\r\n  getValues: variable => {\r\n    return {\r\n      value: battleChants[variable.result],\r\n      unit: undefined,\r\n    };\r\n  },\r\n  getToolTip: variable => {\r\n    return `1d4 [${variable.result}]: ${objectToArrayString(battleChants)}`;\r\n  },\r\n};\r\n\r\nconst CatchyMusicEvent = ({ event }) => {\r\n  const { duration, chantType } = event.variables;\r\n  return (\r\n    <Typography>\r\n      Strange music fills the air for <VM v={duration} u={time} />. The music\r\n      reminds you of <VM v={chantType} h={handleChant} />. Those who hear the\r\n      music are instilled with a strong urge to sing or dance along. A creature\r\n      who does so gains a{' '}\r\n      <mark>+2 morale bonus on attack rolls and saving throws</mark> for the\r\n      duration of the music. heads in the direction of the Pit of Gormuz.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default CatchyMusicEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const centipedes = {\r\n  table: 1,\r\n  percentileMin: 7,\r\n  percentileMax: 10,\r\n  title: 'Centipedes',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(0),\r\n    centipedeCount: makeVariable(6), // new - centipede count, need to figure out how this works to make the CR total work\r\n  }),\r\n};\r\n\r\nconst handleCentipedes = {\r\n  getValues: variable => {\r\n    return {\r\n      value: variable.result,\r\n      unit: 'strangely coloured centipedes',\r\n    };\r\n  },\r\n};\r\n\r\nconst CentipedesEvent = ({ event }) => {\r\n  const { centipedeCount } = event.variables;\r\n  return (\r\n    <Typography>\r\n      <VM v={centipedeCount} h={handleCentipedes} /> appear in the area. These\r\n      centipedes <mark>ignore non-spellcasters</mark> and attack only creatures\r\n      capable of casting spells or using spell-like abilities. This encounter\r\n      should be a mix of centipedes that equals the CR of the primal magic\r\n      event. The corpses of any slaind centipedes pivot their heads in the\r\n      direction of the Pit of Gormuz.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default CentipedesEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Condition from '../../common/conditionDisplay.component';\r\nimport VM, { dist, time, willSave } from '../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const colourDrain = {\r\n  table: 1,\r\n  percentileMin: 1,\r\n  percentileMax: 6,\r\n  title: 'Colour Drain',\r\n  createVariables: cr => ({\r\n    radius: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n    duration: makeConstantVariable(cr * 10, 'CR mins'),\r\n    save: makeConstantVariable(15, 'DC 15 Will Save', 'Will Save'),\r\n  }),\r\n};\r\n\r\nconst ColourDrainEvent = ({ event }) => {\r\n  const { radius, duration, save } = event.variables;\r\n  return (\r\n    <Typography>\r\n      Creatures and objects within a <VM v={radius} u={dist} /> radius are\r\n      drained of colour for <VM v={duration} u={time} />. A gnome in this area\r\n      must succeed at a <VM v={save} u={willSave} /> to avoid being{' '}\r\n      <Condition name=\"Shaken\" /> by this effect for the duration of the loss\r\n      colour. This is a mind-affecting fear effect.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default ColourDrainEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport AonLink from '../../common/linkDisplay.component';\r\nimport { objectToArrayString } from '../../common/utils';\r\nimport VM, { direction, dist, time } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const elementalGrudge = {\r\n  table: 2,\r\n  percentileMin: 91,\r\n  percentileMax: 96,\r\n  title: 'Elemental Grudge',\r\n  createVariables: () => ({\r\n    distance: makeConstantVariable(10, 'within 10ft.'),\r\n    duration: makeConstantVariable(10, '1 minute'),\r\n    elementalType: makeVariable(8),\r\n    cardinalDirection: makeVariable(8),\r\n  }),\r\n};\r\n\r\nconst elementalTypes = {\r\n  1: 'Air',\r\n  2: 'Earth',\r\n  3: 'Fire',\r\n  4: 'Ice',\r\n  5: 'Lightning',\r\n  6: 'Magma',\r\n  7: 'Mud',\r\n  8: 'Water',\r\n};\r\n\r\nconst crSizes = {\r\n  1: 'Small',\r\n  3: 'Medium',\r\n  5: 'Large',\r\n  7: 'Huge',\r\n  9: 'Greater',\r\n  11: 'Elder',\r\n};\r\n\r\nconst getElementalLink = (result, cr) => {\r\n  const availableSizes = Object.entries(crSizes).filter(([key]) => key <= cr);\r\n  const size = availableSizes[availableSizes.length - 1][1]; // They are in order, so we can grab the last available\r\n  const type = elementalTypes[result];\r\n  const prefix = size === crSizes[11] ? 'an' : 'a';\r\n  const link = `https://aonprd.com/MonsterDisplay.aspx?ItemName=${size}%20${type}%20Elemental`;\r\n  return (\r\n    <AonLink\r\n      link={link}\r\n      name={`${prefix} ${size} ${type} Elemental`}\r\n      noHighlight\r\n    />\r\n  );\r\n};\r\n\r\nconst handleElementalType = cr => ({\r\n  getValues: variable => {\r\n    return {\r\n      value: getElementalLink(variable.result, cr),\r\n    };\r\n  },\r\n  getToolTip: variable => {\r\n    return `1d8 [${variable.result}]: ${objectToArrayString(elementalTypes)}`;\r\n  },\r\n});\r\n\r\nconst ElementalGrudgeEvent = ({ event }) => {\r\n  const cr = event.cr;\r\n  const {\r\n    duration,\r\n    distance,\r\n    elementalType,\r\n    cardinalDirection,\r\n  } = event.variables;\r\n  return (\r\n    <Typography>\r\n      An extraplanar rift opens up to the{' '}\r\n      <VM v={cardinalDirection} u={direction} />, <VM v={distance} u={dist} />{' '}\r\n      from the source of this event;{' '}\r\n      <VM v={elementalType} h={handleElementalType(cr.result)} /> comes through\r\n      the rift and <mark>attacks the nearest creature</mark> for{' '}\r\n      <VM v={duration} u={time} /> before returning to its plane of origin.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default ElementalGrudgeEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const elementalUprising = {\r\n  table: 1,\r\n  percentileMin: 49,\r\n  percentileMax: 54,\r\n  title: 'Elemental Uprising',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(0),\r\n    elementalCount: makeVariable(6), // new - elemental count, need to figure out how this works to make the CR total work\r\n  }),\r\n};\r\n\r\nconst handleElementals = {\r\n  getValues: variable => {\r\n    return {\r\n      value: variable.result,\r\n      unit: 'terrain-appropriate elementals',\r\n    };\r\n  },\r\n};\r\n\r\nconst ElementalUprisingEvent = ({ event }) => {\r\n  const { elementalCount } = event.variables;\r\n  return (\r\n    <Typography>\r\n      The enviroment suddenly springs to life and attacks all{' '}\r\n      <mark>non-elemental creatures</mark> in the immediate area. This is an\r\n      encounter with <VM v={elementalCount} h={handleElementals} /> drawn from\r\n      the surroundings with mix of elementals that equals the CR of the primal\r\n      magic event.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default ElementalUprisingEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const enantiomaticSelf = {\r\n  table: 1,\r\n  percentileMin: 19,\r\n  percentileMax: 22,\r\n  title: 'Enantiomatic Self',\r\n  createVariables: () => ({\r\n    duration: makeConstantVariable(0),\r\n  }),\r\n};\r\n\r\nconst EnantiomaticSelfEvent = () => {\r\n  return (\r\n    <Typography>\r\n      One creature&apos;s body and all its posessions reverse into a mirror\r\n      image of themselves. The binding of any book in its posession is reversed,\r\n      though the text within remains normal and legible. This effect is unusal\r\n      but has <mark>no actual game effect</mark>. Reversing this effect is\r\n      possible via break enchantment, limited wish, miracle, polymorph and\r\n      object, or wish.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default EnantiomaticSelfEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, { energy, time } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const energeticTouch = {\r\n  table: 2,\r\n  percentileMin: 52,\r\n  percentileMax: 64,\r\n  title: 'Energetic Touch',\r\n  createVariables: cr => ({\r\n    energyType: makeVariable(4),\r\n    duration: makeConstantVariable(3, 'dissapates in 3 rounds'),\r\n    damage: makeVariable(6, cr, 0, 'CR x 1d6'),\r\n  }),\r\n};\r\n\r\nconst EnergeticTouchEvent = ({ event }) => {\r\n  const { energyType, duration, damage } = event.variables;\r\n  return (\r\n    <Typography>\r\n      The character that triggered this event glows fluorescent with{' '}\r\n      <VM v={energyType} u={energy} />, and deals <VM v={damage} /> points of{' '}\r\n      <VM v={energyType} u={energy} /> damage to the{' '}\r\n      <mark>next creature it touches</mark> (touch attack required). This energy\r\n      disappates in <VM v={duration} u={time} /> if not released.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default EnergeticTouchEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, {\r\n  dist,\r\n  energy,\r\n  reflexSave,\r\n  time,\r\n} from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const energyStorm = {\r\n  table: 1,\r\n  percentileMin: 69,\r\n  percentileMax: 74,\r\n  title: 'Energy Storm',\r\n  createVariables: cr => ({\r\n    energyType: makeVariable(4),\r\n    radius: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n    damage: makeConstantVariable(cr * 2, 'CR x 2 damage'),\r\n    duration: makeConstantVariable(cr, 'CR rounds'),\r\n    save: makeConstantVariable(\r\n      cr + 10,\r\n      'Reflex Save DC = CR + 10',\r\n      'Reflex Save'\r\n    ),\r\n  }),\r\n};\r\n\r\nconst EnergyStormEvent = ({ event }) => {\r\n  const { energyType, radius, damage, duration, save } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A storm of <VM v={energyType} u={energy} /> sweeps through a{' '}\r\n      <VM v={radius} u={dist} /> radius spread. Each round, the storm inflicts{' '}\r\n      <VM v={damage} /> points of damage; a <VM v={save} u={reflexSave} />{' '}\r\n      halves the damage done. The storm persists for{' '}\r\n      <VM v={duration} u={time} />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default EnergyStormEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Spell from '../../common/spellDisplay.component';\r\nimport VM, { dist, reflexSave } from '../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const extradimensionalPit = {\r\n  table: 1,\r\n  percentileMin: 23,\r\n  percentileMax: 26,\r\n  title: 'Extradimensional Pit',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(cr + 1, '1 + 1 round/level'),\r\n    depth: makeConstantVariable(cr * 10, 'CR x 10ft.'),\r\n    casterLevel: makeConstantVariable(cr, 'CL = CR'),\r\n    save: makeConstantVariable(\r\n      cr + 10,\r\n      'Reflex Save DC = CR + 10',\r\n      'Reflex Save'\r\n    ),\r\n  }),\r\n};\r\n\r\nconst ExtradimensionalPitEvent = ({ event }) => {\r\n  const { depth, duration, casterLevel, save } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A circular pit opens under the feet of a random target. The pit creates an\r\n      extradimensional space in the ground, not an actual pit. The pit is{' '}\r\n      <VM v={depth} u={dist} />, but otherwise functions as the{' '}\r\n      <Spell\r\n        name=\"Create Pit\"\r\n        casterLevel={casterLevel}\r\n        save={save}\r\n        saveType={reflexSave}\r\n        duration={duration}\r\n      />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default ExtradimensionalPitEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, { dist, time } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const forgeOfCriticals = {\r\n  table: 2,\r\n  percentileMin: 1,\r\n  percentileMax: 12,\r\n  title: 'Forge of Criticals',\r\n  createVariables: cr => ({\r\n    radius: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n    duration: makeVariable(6),\r\n  }),\r\n};\r\n\r\nconst ForgeOfCriticalsEvent = ({ event }) => {\r\n  const { radius, duration } = event.variables;\r\n  return (\r\n    <Typography>\r\n      The sound of hammers ringing against anvils fills a{' '}\r\n      <VM v={radius} u={dist} /> radius spread area for{' '}\r\n      <VM v={duration} u={time} />. Creatures in this area{' '}\r\n      <mark>automatically confirm critical hits</mark>.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default ForgeOfCriticalsEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Spell from '../../common/spellDisplay.component';\r\nimport VM, { willSave } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const harm = {\r\n  table: 1,\r\n  percentileMin: 33,\r\n  percentileMax: 38,\r\n  title: 'Harm',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(0),\r\n    casterLevel: makeConstantVariable(cr, 'CL = CR'),\r\n    creaturesAffected: makeVariable(cr, 1, 0, '# Creatures <= CR in total'),\r\n    save: makeConstantVariable(cr + 10, 'Will Save DC = CR + 10', 'Will Save'),\r\n  }),\r\n};\r\n\r\nconst HarmEvent = ({ event }) => {\r\n  const { casterLevel, creaturesAffected, save } = event.variables;\r\n  return (\r\n    <Typography>\r\n      Negative energy affects <VM v={creaturesAffected} /> nearby creatures.\r\n      These creatures are affected by a{' '}\r\n      <Spell\r\n        name=\"Harm\"\r\n        casterLevel={casterLevel}\r\n        save={save}\r\n        saveType={willSave}\r\n      />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default HarmEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Spell from '../../common/spellDisplay.component';\r\nimport VM, { willSave } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const heal = {\r\n  table: 1,\r\n  percentileMin: 33,\r\n  percentileMax: 38,\r\n  title: 'Heal',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(0),\r\n    casterLevel: makeConstantVariable(cr, 'CL = CR'),\r\n    creaturesAffected: makeVariable(cr, 1, 0, '# Creatures <= CR in total'),\r\n    save: makeConstantVariable(cr + 10, 'Will Save DC = CR + 10', 'Will Save'),\r\n  }),\r\n};\r\n\r\nconst HealEvent = ({ event }) => {\r\n  const { casterLevel, creaturesAffected, save } = event.variables;\r\n  return (\r\n    <Typography>\r\n      Positive energy affects <VM v={creaturesAffected} /> nearby creatures.\r\n      These creatures are affected by a{' '}\r\n      <Spell\r\n        name=\"Heal\"\r\n        casterLevel={casterLevel}\r\n        save={save}\r\n        saveType={willSave}\r\n      />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default HealEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Condition from '../../common/conditionDisplay.component';\r\nimport VM, { dist, time, willSave } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const icyDread = {\r\n  table: 2,\r\n  percentileMin: 78,\r\n  percentileMax: 90,\r\n  title: 'Icy Dread',\r\n  createVariables: () => ({\r\n    radius: makeConstantVariable(30, '30ft. radius spread'),\r\n    save: makeConstantVariable(20, 'DC 20 Will Save', 'Will Save'),\r\n    duration: makeVariable(6),\r\n  }),\r\n};\r\n\r\nconst IcyDreadEvent = ({ event }) => {\r\n  const { save, duration, radius } = event.variables;\r\n  return (\r\n    <Typography>\r\n      Icy dread cripples all creatures within a <VM v={radius} u={dist} />{' '}\r\n      radius spread. Affected creatures must succeed at a{' '}\r\n      <VM v={save} u={willSave} /> or become <Condition name=\"Staggered\" /> for{' '}\r\n      <VM v={duration} u={time} />. This is a mind-affecting fear effect.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default IcyDreadEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Condition from '../../common/conditionDisplay.component';\r\nimport Spell from '../../common/spellDisplay.component';\r\nimport VM, { time, willSave } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const magicJar = {\r\n  table: 1,\r\n  percentileMin: 95,\r\n  percentileMax: 98,\r\n  title: 'Magic Jar',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(0),\r\n    save: makeConstantVariable(cr + 10, 'Will Save DC = CR + 10', 'Will Save'),\r\n    stunDuration: makeVariable(4), // 1d4 rounds stun duration\r\n    bodySwapDuration: makeConstantVariable(cr, 'CR rounds'),\r\n    casterLevel: makeConstantVariable(cr, 'CL = CR'),\r\n  }),\r\n};\r\n\r\nconst MagicJarEvent = ({ event }) => {\r\n  const { save, stunDuration, bodySwapDuration, casterLevel } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A <Spell name=\"Magic Jar\" casterLevel={casterLevel} /> like effect affects\r\n      two creatures. A <VM v={save} u={willSave} /> negates the effect. If one\r\n      creature fails this save but the other succeeds, the creature that fails\r\n      the save is merely <Condition name=\"Stunned\" /> for{' '}\r\n      <VM v={stunDuration} u={time} />. If both creatures fail the save, their{' '}\r\n      <mark>minds are switched</mark> into each other&apos;s bodies for{' '}\r\n      <VM v={bodySwapDuration} u={time} />.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default MagicJarEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Condition from '../../common/conditionDisplay.component';\r\nimport VM, {\r\n  dist,\r\n  strengthCheck,\r\n  time,\r\n} from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const magneticField = {\r\n  table: 2,\r\n  percentileMin: 39,\r\n  percentileMax: 51,\r\n  title: 'Magnetic Field',\r\n  createVariables: cr => ({\r\n    radius: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n    cmb: makeConstantVariable(cr + 10, 'CMB = CR + 10'),\r\n    duration: makeVariable(6),\r\n    strengthDc: makeConstantVariable(cr + 5, 'CR + 5'),\r\n  }),\r\n};\r\n\r\nconst MagneticFieldEvent = ({ event }) => {\r\n  const { radius, duration, cmb, strengthDc } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A powerful magnetic field opens up in a <VM v={radius} u={dist} /> radius\r\n      spread; this acts as a <mark>trip attempt</mark> against any creatures in\r\n      the area <mark>wearing metal armor</mark> (CMB = +<VM v={cmb} />\r\n      ). As a standard action, a creature knocked <Condition name=\"Prone\" /> by\r\n      this effect may attempt a <VM v={strengthDc} u={strengthCheck} /> to\r\n      stand. This effect lasts for <VM v={duration} u={time} />.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default MagneticFieldEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Condition from '../../common/conditionDisplay.component';\r\nimport VM, { willSave } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const massDelusion = {\r\n  table: 1,\r\n  percentileMin: 63,\r\n  percentileMax: 68,\r\n  title: 'Mass Delusion',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(0),\r\n    creaturesAffected: makeVariable(cr, 1, 0, '# Creatures <= CR in total'),\r\n    save: makeConstantVariable(cr + 10, 'Will Save DC = CR + 10', 'Will Save'),\r\n  }),\r\n};\r\n\r\nconst MassDelusionEvent = ({ event }) => {\r\n  const { variables } = event;\r\n  const { creaturesAffected, save } = variables;\r\n  return (\r\n    <Typography>\r\n      <VM v={creaturesAffected} /> creatures become{' '}\r\n      <Condition name=\"Confused\" /> unless they succeed at a{' '}\r\n      <VM v={save} u={willSave} />. For each affected creature, this effect{' '}\r\n      <mark>persists until</mark> that creature&apos;s confusion effect results\r\n      in <mark>&quot;act normally&quot;</mark>, at which point the effect ends\r\n      for that creature. This is a mind-affecting effect. mind-affecting effect.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default MassDelusionEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, { dist, time } from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const orbOfGrease = {\r\n  table: 2,\r\n  percentileMin: 97,\r\n  percentileMax: 100,\r\n  title: 'Orb of Grease',\r\n  createVariables: cr => ({\r\n    duration: makeVariable(4),\r\n    radius: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n  }),\r\n};\r\n\r\nconst OrbOfGreaseEvent = ({ event }) => {\r\n  const { radius, duration } = event.variables;\r\n  return (\r\n    <Typography>\r\n      An orb of grease explodes and covers all creatures in a{' '}\r\n      <VM v={radius} u={dist} /> radius burst,{' '}\r\n      <mark>increasing all affected creatures&apos; CMD by 10</mark> for{' '}\r\n      <VM v={duration} u={time} />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default OrbOfGreaseEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, { dist, time } from '../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const rainOfSmallObjects = {\r\n  table: 1,\r\n  percentileMin: 27,\r\n  percentileMax: 32,\r\n  title: 'Rain of Small Objects',\r\n  createVariables: cr => ({\r\n    radius: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n    duration: makeConstantVariable(cr, 'CR rounds'),\r\n  }),\r\n};\r\n\r\nconst RainOfSmallObjectsEvent = ({ event }) => {\r\n  const { radius, duration } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A rain of small objects (anything from flowers to rotten fruit) pelts an\r\n      area with a <VM v={radius} u={dist} /> radius for{' '}\r\n      <VM v={duration} u={time} />. This strange hail is not harmful, but this\r\n      time all creatures in the area{' '}\r\n      <mark>gain concealment (20% miss chance)</mark> and must make{' '}\r\n      <mark>concentration checks (DC 15 + SL)</mark> to cast spells.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default RainOfSmallObjectsEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Spell from '../../common/spellDisplay.component';\r\nimport VM, {\r\n  dist,\r\n  willSave,\r\n  direction,\r\n} from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const teleportationStorm = {\r\n  table: 1,\r\n  percentileMin: 89,\r\n  percentileMax: 94,\r\n  title: 'Teleportation Storm',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(0),\r\n    save: makeConstantVariable(cr + 10, 'DC = CR + 10', 'Will Save'),\r\n    distance: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n    casterLevel: makeConstantVariable(cr, 'CL = CR'),\r\n    cardinalDirection: makeVariable(8),\r\n  }),\r\n};\r\n\r\nconst TeleportationStormEvent = ({ event }) => {\r\n  const { distance, save, casterLevel, cardinalDirection } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A teleportation storm occurs. All creatures in the area must make a{' '}\r\n      <VM v={save} u={willSave} />. Those who fail are teleported, as if via\r\n      <Spell name=\"Dimension Door\" casterLevel={casterLevel} />, so that they\r\n      randomly{' '}\r\n      <mark>swap places with another creature that failed their save</mark>.\r\n      this places a creature in an area too small to accept its space, it\r\n      instead appears in the closest adjacent space that can contain it. If only\r\n      one creature is affected, it teleports <VM v={distance} u={dist} /> to the{' '}\r\n      <VM v={cardinalDirection} u={direction} />.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default TeleportationStormEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, { dist } from '../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const trippingTelekinesis = {\r\n  table: 1,\r\n  percentileMin: 75,\r\n  percentileMax: 78,\r\n  title: 'Tripping Telekinesis',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(0),\r\n    radius: makeConstantVariable(cr * 10, 'CR x 10ft.'),\r\n    cmb: makeConstantVariable(cr + 10, 'CMB = CR + 10'),\r\n  }),\r\n};\r\n\r\nconst TrippingTelekinesisEvent = ({ event }) => {\r\n  const { radius, cmb } = event.variables;\r\n  return (\r\n    <Typography>\r\n      Strange telekinetic forces rip through the area, attempting to trip all\r\n      creatures in a <VM v={radius} u={dist} /> radius. The event makes a{' '}\r\n      <mark>trip combat maneuver</mark> check against all available targets,\r\n      using a CMB of +<VM v={cmb} />. Any creature tripped by the event has its\r\n      equipment reorganized and tangled by the mischievous telekinesis. Until a\r\n      creature takes a <mark>minute to reogranise</mark> its belongings,{' '}\r\n      <mark>retrieving a stowed item is a full-round action</mark>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default TrippingTelekinesisEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Spell from '../../common/spellDisplay.component';\r\nimport VM, { dist } from '../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const utterDarkness = {\r\n  table: 1,\r\n  percentileMin: 45,\r\n  percentileMax: 48,\r\n  title: 'Utter Darkness',\r\n  createVariables: cr => ({\r\n    duration: makeConstantVariable(cr * 10 * 10, '10 min./level'),\r\n    radius: makeConstantVariable(cr * 10, 'CR x 10ft.'),\r\n    casterLevel: makeConstantVariable(cr, 'CL = CR'),\r\n  }),\r\n};\r\n\r\nconst UtterDarknessEvent = ({ event }) => {\r\n  const { casterLevel, radius } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A <VM v={radius} u={dist} /> radius area becomes utterly dark, as if from\r\n      a <Spell name=\"Deeper Darkness\" casterLevel={casterLevel} />\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default UtterDarknessEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, {\r\n  dist,\r\n  reflexSave,\r\n  time,\r\n} from '../../common/variableMark.component';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n} from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const weightlessness = {\r\n  table: 2,\r\n  percentileMin: 65,\r\n  percentileMax: 77,\r\n  title: 'Weightlessness',\r\n  createVariables: () => ({\r\n    save: makeConstantVariable(20, 'DC 20 Reflex Save', 'Reflex Save'),\r\n    duration: makeVariable(6),\r\n    rate: makeConstantVariable(10, '10ft. per round'),\r\n  }),\r\n};\r\n\r\nconst WeightlessnessEvent = ({ event }) => {\r\n  const { save, duration, rate } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A high-pitched ringing accompanies a feeling of weightlessness, and{' '}\r\n      <mark>\r\n        any creature that would have been targeted by the effect that triggered\r\n        this Primal Magic event\r\n      </mark>{' '}\r\n      must succeed at a <VM v={save} u={reflexSave} /> or float straight up at a\r\n      rate of <VM v={rate} u={dist} /> per round for{' '}\r\n      <VM v={duration} u={time} />. Creatures may attempt to grab hold of nearby\r\n      objects to slow or halt their ascent at the GM&apos;s discretion.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default WeightlessnessEvent;\r\n","import { Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport VM, { dist, time } from '../../common/variableMark.component';\r\nimport { makeConstantVariable } from '../../state/activePrimalEvents/activePrimalEventsState';\r\n\r\nexport const zoneOfUnluck = {\r\n  table: 1,\r\n  percentileMin: 15,\r\n  percentileMax: 18,\r\n  title: 'Zone of Unluck',\r\n  createVariables: cr => ({\r\n    radius: makeConstantVariable(cr * 5, 'CR x 5ft.'),\r\n    duration: makeConstantVariable(cr * 10 * 60, 'CR hours'),\r\n  }),\r\n};\r\n\r\nconst ZoneOfUnluckEvent = ({ event }) => {\r\n  const { radius, duration } = event.variables;\r\n  return (\r\n    <Typography>\r\n      A zone of unluck and a strange pale violet radience equivalent to\r\n      candlelight fills a <VM v={radius} u={dist} /> radius for{' '}\r\n      <VM v={duration} u={time} />. All <mark>d20 rolls</mark> made in the must\r\n      be <mark>rolled twice, taking the lower</mark> of the two rolls.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default ZoneOfUnluckEvent;\r\n","import React from 'react';\r\nimport AuroraBorealisEvent, {\r\n  auroraBorealis,\r\n} from '../auroraBorealisEvent.component';\r\nimport BlackTentaclesEvent, {\r\n  blackTentacles,\r\n} from '../blackTentaclesEvent.component';\r\nimport BoomingCannonsEvent, {\r\n  boomingCannons,\r\n} from '../boomingCannonsEvent.component';\r\nimport CatchyMusicEvent, { catchyMusic } from '../catchyMusicEvent.component';\r\nimport CentipedesEvent, { centipedes } from '../centipedesEvent.component';\r\nimport ColourDrainEvent, { colourDrain } from '../colourDrainEvent.component';\r\nimport ElementalGrudgeEvent, {\r\n  elementalGrudge,\r\n} from '../elementalGrudgeEvent.component';\r\nimport ElementalUprisingEvent, {\r\n  elementalUprising,\r\n} from '../elementalUprisingEvent.component';\r\nimport EnantiomaticSelfEvent, {\r\n  enantiomaticSelf,\r\n} from '../enantiomaticSelfEvent.component';\r\nimport EnergeticTouchEvent, {\r\n  energeticTouch,\r\n} from '../energeticTouchEvent.component';\r\nimport EnergyStormEvent, { energyStorm } from '../energyStormEvent.component';\r\nimport ExtradimensionalPitEvent, {\r\n  extradimensionalPit,\r\n} from '../extradimensionalPit.component';\r\nimport ForgeOfCriticalsEvent, {\r\n  forgeOfCriticals,\r\n} from '../forgeOfCriticals.component';\r\nimport HarmEvent, { harm } from '../harmEvent.component';\r\nimport HealEvent, { heal } from '../healEvent.component';\r\nimport IcyDreadEvent, { icyDread } from '../icyDread.component';\r\nimport MagicJarEvent, { magicJar } from '../magicJarEvent.component';\r\nimport MagneticFieldEvent, {\r\n  magneticField,\r\n} from '../magneticFieldEvent.component';\r\nimport MassDelusionEvent, {\r\n  massDelusion,\r\n} from '../massDelusionEvent.component';\r\nimport OrbOfGreaseEvent, { orbOfGrease } from '../orbOfGreaseEvent.component';\r\nimport RainOfSmallObjectsEvent, {\r\n  rainOfSmallObjects,\r\n} from '../rainOfSmallObjectsEvent.component';\r\nimport TeleportationStormEvent, {\r\n  teleportationStorm,\r\n} from '../teleportationStormEvent.component';\r\nimport TrippingTelekinesisEvent, {\r\n  trippingTelekinesis,\r\n} from '../trippingTelekinesisEvent.component';\r\nimport UtterDarknessEvent, {\r\n  utterDarkness,\r\n} from '../utterDarknessEvent.component';\r\nimport WeightlessnessEvent, {\r\n  weightlessness,\r\n} from '../weightlessnessEvent.component';\r\nimport WonderousMagicEvent, {\r\n  wonderousMagic,\r\n} from '../wonderousMagicEvent.component';\r\nimport ZoneOfUnluckEvent, {\r\n  zoneOfUnluck,\r\n} from '../zoneOfUnluckEvent.component';\r\n\r\nexport const getLimitedEventCardContent = event => {\r\n  if (event.title === colourDrain.title) {\r\n    return <ColourDrainEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === centipedes.title) {\r\n    return <CentipedesEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === catchyMusic.title) {\r\n    return <CatchyMusicEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === zoneOfUnluck.title) {\r\n    return <ZoneOfUnluckEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === enantiomaticSelf.title) {\r\n    return <EnantiomaticSelfEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === extradimensionalPit.title) {\r\n    return <ExtradimensionalPitEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === rainOfSmallObjects.title) {\r\n    return <RainOfSmallObjectsEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === heal.title) {\r\n    return <HealEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === harm.title) {\r\n    return <HarmEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === utterDarkness.title) {\r\n    return <UtterDarknessEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === elementalUprising.title) {\r\n    return <ElementalUprisingEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === auroraBorealis.title) {\r\n    return <AuroraBorealisEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === massDelusion.title) {\r\n    return <MassDelusionEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === energyStorm.title) {\r\n    return <EnergyStormEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === trippingTelekinesis.title) {\r\n    return <TrippingTelekinesisEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === wonderousMagic.title) {\r\n    return <WonderousMagicEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === teleportationStorm.title) {\r\n    return <TeleportationStormEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === magicJar.title) {\r\n    return <MagicJarEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === forgeOfCriticals.title) {\r\n    return <ForgeOfCriticalsEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === blackTentacles.title) {\r\n    return <BlackTentaclesEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === boomingCannons.title) {\r\n    return <BoomingCannonsEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === magneticField.title) {\r\n    return <MagneticFieldEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === energeticTouch.title) {\r\n    return <EnergeticTouchEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === weightlessness.title) {\r\n    return <WeightlessnessEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === icyDread.title) {\r\n    return <IcyDreadEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === elementalGrudge.title) {\r\n    return <ElementalGrudgeEvent event={event} />;\r\n  }\r\n\r\n  if (event.title === orbOfGrease.title) {\r\n    return <OrbOfGreaseEvent event={event} />;\r\n  }\r\n\r\n  return <div>UNKNOWN EVENT {event.title}</div>;\r\n};\r\n\r\nexport const limitedEvents = [\r\n  colourDrain,\r\n  centipedes,\r\n  catchyMusic,\r\n  zoneOfUnluck,\r\n  enantiomaticSelf,\r\n  extradimensionalPit,\r\n  rainOfSmallObjects,\r\n  heal,\r\n  harm,\r\n  utterDarkness,\r\n  elementalUprising,\r\n  auroraBorealis,\r\n  massDelusion,\r\n  energyStorm,\r\n  trippingTelekinesis,\r\n  wonderousMagic,\r\n  teleportationStorm,\r\n  magicJar,\r\n  forgeOfCriticals,\r\n  blackTentacles,\r\n  boomingCannons,\r\n  magneticField,\r\n  energeticTouch,\r\n  weightlessness,\r\n  icyDread,\r\n  elementalGrudge,\r\n  orbOfGrease,\r\n];\r\n\r\nexport const getLimitedEvent = (percentileRoll, tableRoll) => {\r\n  const eventsInRange = limitedEvents\r\n    .filter(e => e.table === tableRoll)\r\n    .filter(\r\n      e =>\r\n        percentileRoll >= e.percentileMin && percentileRoll <= e.percentileMax\r\n    );\r\n\r\n  if (eventsInRange.length === 0) {\r\n    return limitedEvents[0];\r\n  }\r\n\r\n  return eventsInRange[0];\r\n};\r\n","import { Avatar, Chip, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles({\r\n  chip: {\r\n    marginRight: 2,\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\nconst CustomChip = ({ label, value }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Chip\r\n      className={classes.chip}\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      avatar={value !== undefined ? <Avatar>{value}</Avatar> : null}\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomChip;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { currentRoundSelector } from '../state/rounds/roundsState';\r\nimport CustomChip from './customChip.component';\r\n\r\nconst DurationEndChip = ({ value }) => {\r\n  const currentRound = useSelector(currentRoundSelector);\r\n\r\n  if (value === undefined) {\r\n    return <CustomChip label=\"Instantaneous\" />;\r\n  }\r\n\r\n  const duration = value - currentRound;\r\n\r\n  if (value < 10 || duration < 10) {\r\n    return <CustomChip label=\"End\" value={value} />;\r\n  }\r\n\r\n  if (duration < 59 * 10) {\r\n    const durationInMins = Math.ceil(duration / 10);\r\n    const plural = durationInMins > 1;\r\n    return (\r\n      <CustomChip\r\n        label={`Min${plural ? 's' : ''} Remain${plural ? '' : 's'}`}\r\n        value={durationInMins}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (duration < 23 * 60 * 10) {\r\n    const durationInHours = Math.ceil(duration / 600);\r\n    const plural = durationInHours > 1;\r\n    return (\r\n      <CustomChip\r\n        label={`Hr${plural ? 's' : ''} Remain${plural ? '' : 's'}`}\r\n        value={`${durationInHours}`}\r\n      />\r\n    );\r\n  }\r\n\r\n  const durationInDays = Math.ceil(duration / (24 * 60 * 10));\r\n  const plural = durationInDays > 1;\r\n  return (\r\n    <CustomChip\r\n      label={`Day${plural ? 's' : ''} Remain${plural ? '' : 's'}`}\r\n      value={`${durationInDays}`}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DurationEndChip;\r\n","import { Avatar, Chip, makeStyles, Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { getToolTip } from './variableMark.component';\r\n\r\nconst useStyles = makeStyles({\r\n  chip: {\r\n    marginRight: 2,\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\nconst VariableChip = ({ label, variable }) => {\r\n  const classes = useStyles();\r\n  const toolTip = getToolTip(variable);\r\n  const value = variable.result;\r\n  return (\r\n    <Chip\r\n      className={classes.chip}\r\n      size=\"small\"\r\n      variant=\"outlined\"\r\n      avatar={\r\n        <Tooltip title={toolTip} placement=\"bottom\">\r\n          <Avatar>{value}</Avatar>\r\n        </Tooltip>\r\n      }\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n\r\nexport default VariableChip;\r\n","import { Box } from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\nimport CustomChip from '../common/customChip.component';\r\nimport DurationEndChip from '../common/durationChip.component';\r\nimport { manualTriggerType } from '../state/triggerDialog/triggerDialogState';\r\nimport VariableChip from '../common/variableChip.component';\r\n\r\nconst getFinalRoundOrUndefined = (finalRound, duration) =>\r\n  duration && !(duration?.modifier === 0 && duration.result === 0)\r\n    ? finalRound\r\n    : undefined;\r\n\r\nconst EventCardChips = ({ event }) => {\r\n  const {\r\n    cr,\r\n    variables,\r\n    percentileRoll,\r\n    tableRoll,\r\n    startRound,\r\n    finalRound,\r\n    triggerType,\r\n  } = event;\r\n  const { duration, save, initiative } = variables;\r\n  const finalRoundDisplay = getFinalRoundOrUndefined(finalRound, duration);\r\n  return (\r\n    <Box>\r\n      <CustomChip label=\"Table\" value={tableRoll} />\r\n      <CustomChip label=\"d%\" value={percentileRoll} />\r\n      <VariableChip label=\"CR\" variable={cr} />\r\n      <CustomChip label=\"Start\" value={startRound} />\r\n      <DurationEndChip value={finalRoundDisplay} />\r\n      {save && <CustomChip label={save?.type ?? 'Save'} value={save.result} />}\r\n      {triggerType &&\r\n        (triggerType === manualTriggerType ? (\r\n          <CustomChip label=\"Manual Event\" />\r\n        ) : (\r\n          <Fragment>\r\n            <CustomChip label=\"Storm Event\" />\r\n            <VariableChip label=\"Init\" variable={initiative} />\r\n          </Fragment>\r\n        ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EventCardChips;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport React from 'react';\r\nimport { eventImminant, eventActive } from '../common/colours';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport { useSelector } from 'react-redux';\r\nimport { currentRoundSelector } from '../state/rounds/roundsState';\r\nimport EventCardChips from './eventCardChips.component';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '100%',\r\n  },\r\n  cardHeader: {\r\n    backgroundColor: ({ titleColour, expiresThisTurn }) =>\r\n      titleColour ?? (expiresThisTurn ? eventImminant : eventActive),\r\n    color: 'white',\r\n    alignItems: 'flex-start',\r\n    paddingTop: 3,\r\n    paddingBottom: 3,\r\n  },\r\n  expandAction: {\r\n    color: 'white',\r\n    height: '100%',\r\n    marginTop: 12,\r\n  },\r\n  cardContent: {\r\n    paddingTop: 5,\r\n    '&:last-child': {\r\n      paddingBottom: 5,\r\n    },\r\n  },\r\n});\r\n\r\nconst EventCard = ({\r\n  event,\r\n  titleColour,\r\n  onExpandToggleClicked,\r\n  getEventCardContent,\r\n}) => {\r\n  const { title, expanded, finalRound } = event;\r\n  const currentRound = useSelector(currentRoundSelector);\r\n  const expiresThisTurn = finalRound === currentRound;\r\n  const classes = useStyles({ titleColour, expiresThisTurn });\r\n\r\n  return (\r\n    <Card className={classes.card} variant=\"outlined\">\r\n      <CardHeader\r\n        className={classes.cardHeader}\r\n        title={title}\r\n        subheader={<EventCardChips event={event} />}\r\n        titleTypographyProps={{ variant: 'h6' }}\r\n        action={\r\n          <IconButton\r\n            className={classes.expandAction}\r\n            onClick={onExpandToggleClicked}\r\n            disableRipple\r\n          >\r\n            {expanded ? <ExpandLessIcon /> : <ExpandMoreIcon />}\r\n          </IconButton>\r\n        }\r\n      />\r\n      {expanded && (\r\n        <CardContent className={classes.cardContent}>\r\n          {getEventCardContent(event)}\r\n        </CardContent>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nEventCard.defaultProps = {\r\n  titleColour: undefined,\r\n};\r\n\r\nexport default EventCard;\r\n","import { Box, Divider, makeStyles, Typography } from '@material-ui/core';\r\nimport { cyan } from '@material-ui/core/colors';\r\nimport React, { useState } from 'react';\r\nimport { rollTableDice } from '../../../random';\r\nimport {\r\n  makeConstantVariable,\r\n  makeLimitedVariable,\r\n} from '../../../state/activePrimalEvents/activePrimalEventsState';\r\nimport { calculateFinalRound } from '../../../state/manualTrigger/manualTriggerState.thunk';\r\nimport EventCard from '../../eventCard.component';\r\nimport { getLimitedEvent, getLimitedEventCardContent } from './limitedEvents';\r\n\r\nconst useStyles = makeStyles({\r\n  divider: {\r\n    width: '100%',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nconst prefixVariableKeys = (variables, prefix) => {\r\n  let newVariables = {};\r\n\r\n  Object.entries(variables).forEach(([key, value]) => {\r\n    newVariables[`${prefix}${key}`] = value;\r\n  });\r\n\r\n  return newVariables;\r\n};\r\n\r\nconst removeVariableKeyPrefix = (variables, prefix) => {\r\n  let newVariables = {\r\n    ...variables,\r\n  };\r\n\r\n  Object.entries(variables)\r\n    .filter(([key]) => key.startsWith(prefix))\r\n    .forEach(([key, value]) => {\r\n      newVariables[key.replace(prefix, '')] = value;\r\n    });\r\n\r\n  return newVariables;\r\n};\r\n\r\nconst longestDuration = (firstVars, secondVars) => {\r\n  const firstDuration = firstVars.oneduration;\r\n  const secondDuration = secondVars.twoduration;\r\n\r\n  if (!firstDuration && !secondDuration) {\r\n    return makeConstantVariable(0);\r\n  }\r\n\r\n  if (!secondDuration) {\r\n    return firstDuration;\r\n  }\r\n\r\n  if (!firstDuration) {\r\n    return secondDuration;\r\n  }\r\n\r\n  return firstDuration.result > secondDuration.result\r\n    ? firstDuration\r\n    : secondDuration;\r\n};\r\n\r\nexport const twoSimultaneousEvents = {\r\n  table: 1,\r\n  percentileMin: 99,\r\n  percentileMax: 100,\r\n  title: 'Two Simultaneous Events',\r\n  createVariables: cr => {\r\n    // Never allow either simultaneous event to be another two simultaneous events\r\n    const percentileOne = makeLimitedVariable(100, 98);\r\n    const tableOne = rollTableDice();\r\n    const percentileTwo = makeLimitedVariable(100, 98);\r\n    const tableTwo = rollTableDice();\r\n\r\n    const eventOne = getLimitedEvent(percentileOne.result, tableOne);\r\n    const eventOneVariables = prefixVariableKeys(\r\n      eventOne.createVariables(cr),\r\n      'one'\r\n    );\r\n\r\n    const eventTwo = getLimitedEvent(percentileTwo.result, tableTwo);\r\n    const eventTwoVariables = prefixVariableKeys(\r\n      eventTwo.createVariables(cr),\r\n      'two'\r\n    );\r\n\r\n    const duration = longestDuration(eventOneVariables, eventTwoVariables);\r\n\r\n    return {\r\n      duration: duration,\r\n      percentileOne,\r\n      percentileTwo,\r\n      ...eventOneVariables,\r\n      ...eventTwoVariables,\r\n    };\r\n  },\r\n};\r\n\r\nconst deconstructEvent = (\r\n  event,\r\n  isOpen,\r\n  percentile,\r\n  variables,\r\n  variablePrefix\r\n) => {\r\n  const title = getLimitedEvent(percentile).title;\r\n  const deconstructedEventVariables = removeVariableKeyPrefix(\r\n    variables,\r\n    variablePrefix\r\n  );\r\n  const finalRound = calculateFinalRound(\r\n    deconstructedEventVariables.duration,\r\n    event.startRound\r\n  );\r\n\r\n  return {\r\n    ...event,\r\n    title,\r\n    percentileRoll: percentile,\r\n    variables: deconstructedEventVariables,\r\n    expanded: isOpen,\r\n    finalRound,\r\n  };\r\n};\r\n\r\nconst TwoSimultaneousEventsEvent = ({ event }) => {\r\n  const classes = useStyles();\r\n  const { percentileOne, percentileTwo } = event.variables;\r\n\r\n  const [eventOneOpen, setEventOneOpen] = useState(true);\r\n  const [eventTwoOpen, setEventTwoOpen] = useState(true);\r\n  const eventOne = deconstructEvent(\r\n    event,\r\n    eventOneOpen,\r\n    percentileOne.result,\r\n    event.variables,\r\n    'one'\r\n  );\r\n  const eventTwo = deconstructEvent(\r\n    event,\r\n    eventTwoOpen,\r\n    percentileTwo.result,\r\n    event.variables,\r\n    'two'\r\n  );\r\n\r\n  return (\r\n    <Box>\r\n      <Typography>The following two events occur simultaneously</Typography>\r\n      <Divider className={classes.divider} />\r\n      <EventCard\r\n        event={eventOne}\r\n        titleColour={cyan['A700']}\r\n        onExpandToggleClicked={() => setEventOneOpen(!eventOneOpen)}\r\n        getEventCardContent={getLimitedEventCardContent}\r\n      />\r\n      <Divider className={classes.divider} />\r\n      <EventCard\r\n        event={eventTwo}\r\n        titleColour={cyan['A700']}\r\n        onExpandToggleClicked={() => setEventTwoOpen(!eventTwoOpen)}\r\n        getEventCardContent={getLimitedEventCardContent}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TwoSimultaneousEventsEvent;\r\n","import React from 'react';\r\nimport {\r\n  getLimitedEventCardContent,\r\n  limitedEvents,\r\n} from './eventComponents/twoSimlultaneousEvents/limitedEvents';\r\nimport TwoSimultaneousEventsEvent, {\r\n  twoSimultaneousEvents,\r\n} from './eventComponents/twoSimlultaneousEvents/twoSimultaneousEventsEvent.component';\r\n\r\nexport const getEventCardContent = event => {\r\n  if (event.title === twoSimultaneousEvents.title) {\r\n    return <TwoSimultaneousEventsEvent event={event} />;\r\n  }\r\n\r\n  return getLimitedEventCardContent(event);\r\n};\r\n\r\nexport const events = [...limitedEvents, twoSimultaneousEvents];\r\n\r\nexport const getEvent = (percentileRoll, tableRoll) => {\r\n  const eventsInRange = events\r\n    .filter(e => e.table === tableRoll)\r\n    .filter(\r\n      e =>\r\n        percentileRoll >= e.percentileMin && percentileRoll <= e.percentileMax\r\n    );\r\n\r\n  if (eventsInRange.length === 0) {\r\n    return events[0];\r\n  }\r\n\r\n  return eventsInRange[0];\r\n};\r\n\r\nexport const getEventByTitle = title => {\r\n  const eventsWithTitle = events.filter(e => e.title === title);\r\n\r\n  if (eventsWithTitle.length === 0) {\r\n    return events[0];\r\n  }\r\n\r\n  return eventsWithTitle[0];\r\n};\r\n","import { wonderousMagic } from '../../events/eventComponents/wonderousMagicEvent.component';\r\nimport { getEvent, getEventByTitle } from '../../events/events';\r\nimport { rollPercentile, rollTableDice } from '../../random';\r\nimport {\r\n  makeConstantVariable,\r\n  makeVariable,\r\n  primalEventInitialState,\r\n} from '../activePrimalEvents/activePrimalEventsState';\r\nimport { currentRoundSelector } from '../rounds/roundsState';\r\nimport {\r\n  manualTriggerType,\r\n  setTriggerDialogState,\r\n  triggerDialogInitialState,\r\n} from '../triggerDialog/triggerDialogState';\r\nimport {\r\n  alwaysSelectSameEventSelector,\r\n  alwaysSelectSameRodResultSelector,\r\n  eventAlwaysSelectedSelector,\r\n  eventsAlwaysTriggerSelector,\r\n  rodOfWonderAlwaysSelectedSelector,\r\n} from '../userSettings/userSetingsState';\r\nimport { specifiedCrSelector } from './manualTriggerState';\r\n\r\nexport const calculateFinalRound = (durationVariable, startRound) => {\r\n  const durationInRounds = durationVariable?.result;\r\n  return durationInRounds === undefined\r\n    ? undefined\r\n    : startRound + durationInRounds;\r\n};\r\n\r\nexport const generateEventVariablesWithDefaults = (\r\n  event,\r\n  crVal,\r\n  rodOfWonderResultAlwaysSelected\r\n) => ({\r\n  ...event.createVariables(crVal, rodOfWonderResultAlwaysSelected),\r\n  initiative: makeVariable(20, 1, 5),\r\n});\r\n\r\nexport const generateDialogEvent = (\r\n  percentile,\r\n  tableRoll,\r\n  cr,\r\n  startRound,\r\n  eventAlwaysSelected,\r\n  rodOfWonderResultAlwaysSelected,\r\n  triggerType\r\n) => {\r\n  const crVal = cr.result ?? cr;\r\n  const crVar = cr.result ? cr : makeConstantVariable(cr, 'CR = CL');\r\n  const correspondingEvent = eventAlwaysSelected\r\n    ? getEventByTitle(eventAlwaysSelected)\r\n    : getEvent(percentile, tableRoll);\r\n  const variables = generateEventVariablesWithDefaults(\r\n    correspondingEvent,\r\n    crVal,\r\n    rodOfWonderResultAlwaysSelected\r\n  );\r\n\r\n  const finalRound = calculateFinalRound(variables.duration, startRound);\r\n\r\n  return {\r\n    ...primalEventInitialState,\r\n    id: Date.now(),\r\n    title: correspondingEvent.title,\r\n    percentileRoll: eventAlwaysSelected\r\n      ? correspondingEvent.percentileMin\r\n      : percentile,\r\n    tableRoll: eventAlwaysSelected ? correspondingEvent.table : tableRoll,\r\n    cr: crVar,\r\n    startRound,\r\n    finalRound,\r\n    variables,\r\n    expanded: true,\r\n    triggerType,\r\n  };\r\n};\r\n\r\n// Thunk that handles all state when pressing the manual trigger button\r\n// Rolls a percentile, then generates the dialog state, and the event state if roll was high enought\r\n// Then opens the dialog with that state\r\nexport const manualTriggerThunk = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const percentile = rollPercentile();\r\n  const currentCr = specifiedCrSelector(state);\r\n  const dialogState = {\r\n    ...triggerDialogInitialState,\r\n    open: true,\r\n    triggerType: manualTriggerType,\r\n    percentile,\r\n    cr: currentCr,\r\n  };\r\n\r\n  const eventsAlwaysTrigger = eventsAlwaysTriggerSelector(state);\r\n\r\n  if (eventsAlwaysTrigger || percentile <= dialogState.threshold) {\r\n    const currentRound = currentRoundSelector(state);\r\n    const alwaysShowSameEvent = alwaysSelectSameEventSelector(state);\r\n    const eventAlwaysSelected = alwaysShowSameEvent\r\n      ? eventAlwaysSelectedSelector(state)\r\n      : undefined;\r\n    const alwaysShowSameRodResult = alwaysSelectSameRodResultSelector(state);\r\n    const rodOfWonderResultAlwaysSelected =\r\n      eventAlwaysSelected === wonderousMagic.title && alwaysShowSameRodResult\r\n        ? rodOfWonderAlwaysSelectedSelector(state)\r\n        : undefined;\r\n\r\n    const eventPercentile = rollPercentile();\r\n    const tableRoll = rollTableDice();\r\n    const event = generateDialogEvent(\r\n      eventPercentile,\r\n      tableRoll,\r\n      currentCr,\r\n      currentRound,\r\n      eventAlwaysSelected,\r\n      rodOfWonderResultAlwaysSelected,\r\n      dialogState.triggerType\r\n    );\r\n    dialogState.currentEvent = event;\r\n  }\r\n\r\n  dispatch(setTriggerDialogState(dialogState));\r\n};\r\n","import React from 'react';\r\nimport { Grid, makeStyles, TextField, Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  characterInitialState,\r\n  characterSelector,\r\n  setManualTriggerCr,\r\n  specifiedCrSelector,\r\n} from '../state/manualTrigger/manualTriggerState';\r\n\r\nconst useStyles = makeStyles({\r\n  inputContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    padding: 20,\r\n  },\r\n  input: {\r\n    textAlign: 'center',\r\n  },\r\n  label: {\r\n    marginTop: 5,\r\n  },\r\n});\r\n\r\nconst CrInput = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const currentCharacter = useSelector(characterSelector);\r\n  const disabled = currentCharacter?.name !== characterInitialState.name;\r\n  const currentCr = useSelector(specifiedCrSelector);\r\n  const crError = !disabled && (currentCr > 20 || currentCr < 1);\r\n  const crErrorLabel = !disabled && crError ? 'between 1 and 20' : null;\r\n\r\n  const onCrChanged = event => {\r\n    const value = event.target.value;\r\n    const number = value === undefined ? undefined : parseInt(value);\r\n    dispatch(setManualTriggerCr(number));\r\n  };\r\n\r\n  return (\r\n    <Grid className={classes.inputContainer} container spacing={1}>\r\n      <Grid item>\r\n        <Typography className={classes.label}>CR / CL:</Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <TextField\r\n          disabled={disabled}\r\n          error={crError}\r\n          helperText={crErrorLabel}\r\n          type=\"number\"\r\n          InputLabelProps={{\r\n            hidden: true,\r\n          }}\r\n          inputProps={{\r\n            className: classes.input,\r\n          }}\r\n          value={currentCr}\r\n          onChange={onCrChanged}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CrInput;\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  FormControlLabel,\r\n  makeStyles,\r\n  Radio,\r\n  RadioGroup,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  characterInitialState,\r\n  characters,\r\n  characterSelector,\r\n  setManualTriggerCharacter,\r\n} from '../state/manualTrigger/manualTriggerState';\r\n\r\nconst useStyles = makeStyles({\r\n  radioContainer: {\r\n    padding: 20,\r\n  },\r\n});\r\n\r\nconst CharacterSwitch = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const currentCharacter = useSelector(characterSelector);\r\n\r\n  const handleCharacterChanged = event => {\r\n    const selected = event?.target?.value ?? characterInitialState.name;\r\n    const character = characters[selected];\r\n    dispatch(setManualTriggerCharacter(character));\r\n  };\r\n\r\n  return (\r\n    <FormControl className={classes.radioContainer}>\r\n      <Typography>Character</Typography>\r\n      <RadioGroup\r\n        value={currentCharacter.name}\r\n        onChange={handleCharacterChanged}\r\n      >\r\n        {Object.keys(characters).map(key => (\r\n          <FormControlLabel\r\n            labelPlacement=\"end\"\r\n            key={key}\r\n            value={key}\r\n            control={<Radio color=\"default\" />}\r\n            label={<Typography>{characters[key].name}</Typography>}\r\n          />\r\n        ))}\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CharacterSwitch;\r\n","import React from 'react';\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport CrInput from './crInput.component';\r\nimport CharacterSwitch from './characterSwitch.component';\r\n\r\nconst useStyles = makeStyles({\r\n  content: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n  },\r\n});\r\n\r\nconst ManualTriggerContent = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.content}>\r\n      <CrInput />\r\n      <CharacterSwitch />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ManualTriggerContent;\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport BarHeader from '../common/barHeader.component';\r\nimport { manualTriggerHeader } from '../common/colours';\r\nimport { manualTriggerThunk } from '../state/manualTrigger/manualTriggerState.thunk';\r\nimport ManualTriggerContent from './manualTriggerContent.component';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    height: '100%',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  footer: {\r\n    margin: 20,\r\n  },\r\n});\r\n\r\nconst ManualTriggerBar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onManualTriggerClicked = () => {\r\n    dispatch(manualTriggerThunk());\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <BarHeader title=\"Manual Trigger\" colour={manualTriggerHeader} />\r\n      <ManualTriggerContent />\r\n      <Box className={classes.footer}>\r\n        <Button variant=\"contained\" onClick={onManualTriggerClicked}>\r\n          Manually Trigger Event\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ManualTriggerBar;\r\n","// Thunk that handles all state when toggling all expanded or not\r\n\r\nimport {\r\n  collapseAll,\r\n  expandAll,\r\n  toggleSingleExpanded,\r\n} from '../activePrimalEvents/activePrimalEventsState';\r\nimport {\r\n  allExpandedSelector,\r\n  setAllExpandedState,\r\n} from './eventExpansionState';\r\n\r\n// If tristate 'allExpanded' is undefined (i.e. some expanded some not) then it will expand all\r\nexport const toggleAllExpandedThunk = () => (dispatch, getState) => {\r\n  if (!allExpandedSelector(getState())) {\r\n    dispatch(setAllExpandedState(true));\r\n    dispatch(expandAll());\r\n  } else {\r\n    dispatch(setAllExpandedState(false));\r\n    dispatch(collapseAll());\r\n  }\r\n};\r\n\r\n// Thunk that handles all state when toggling a single event\r\n// Sets tristate 'allExpanded' to undefined (i.e. some are expanded, some not)\r\n// May need to reconsider this last part because what if you toggle one so they're all expanded/collapsed...\r\nexport const toggleSingleExpandedThunk = id => dispatch => {\r\n  dispatch(toggleSingleExpanded(id));\r\n  dispatch(setAllExpandedState(undefined));\r\n};\r\n","import React from 'react';\r\nimport { Box, List, ListItem, makeStyles } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleSingleExpandedThunk } from '../state/eventExpansionState/eventExpansionState.thunk';\r\nimport { activePrimalEventsSelector } from '../state/activePrimalEvents/activePrimalEventsState';\r\nimport EventCard from '../events/eventCard.component';\r\nimport { getEventCardContent } from '../events/events';\r\n\r\nconst useStyles = makeStyles({\r\n  content: {\r\n    height: '100%',\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-start',\r\n    overflow: 'auto',\r\n  },\r\n});\r\n\r\nconst ActivePrimalEventsListContent = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const activePrimalEvents = useSelector(activePrimalEventsSelector);\r\n\r\n  const toggleSingleClicked = primalEvent => () => {\r\n    dispatch(toggleSingleExpandedThunk(primalEvent.id));\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.content}>\r\n      {activePrimalEvents.length > 0 && (\r\n        <List>\r\n          {activePrimalEvents.map(primalEvent => (\r\n            <ListItem key={primalEvent.id}>\r\n              <EventCard\r\n                event={primalEvent}\r\n                onExpandToggleClicked={toggleSingleClicked(primalEvent)}\r\n                getEventCardContent={getEventCardContent}\r\n              />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActivePrimalEventsListContent;\r\n","export default __webpack_public_path__ + \"static/media/primal_magic_flowchart.0bce3f09.png\";","import { Button, Dialog, DialogContent, makeStyles } from '@material-ui/core';\r\nimport React, { Fragment, useState } from 'react';\r\nimport primalMagicFlowchart from '../images/primal_magic_flowchart.png';\r\n\r\nconst useStyles = makeStyles({\r\n  footerButton: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  image: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nconst FlowchartDisplay = () => {\r\n  const classes = useStyles();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const onOpen = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        className={classes.footerButton}\r\n        variant=\"contained\"\r\n        onClick={onOpen}\r\n      >\r\n        Flowchart\r\n      </Button>\r\n      <Dialog open={dialogOpen} onClose={onClose}>\r\n        <DialogContent>\r\n          <img className={classes.image} src={primalMagicFlowchart} />\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FlowchartDisplay;\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControlLabel,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n} from '@material-ui/core';\r\nimport React, { Fragment, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  alwaysSelectSameEventSelector,\r\n  eventAlwaysSelectedSelector,\r\n  eventsAlwaysTriggerSelector,\r\n  rodOfWonderAlwaysSelectedSelector,\r\n  resetOnlyResetsRoundsSelector,\r\n  setAlwaysSelectSameEvent,\r\n  setEventAlwaysSelected,\r\n  setEventsAlwaysTrigger,\r\n  setRodOfWonderAlwaysSelected,\r\n  setResetOnlyResetsRounds,\r\n  alwaysSelectSameRodResultSelector,\r\n  setAlwaysSelectSameRodResult,\r\n} from '../state/userSettings/userSetingsState';\r\nimport { events } from '../events/events';\r\nimport { userSettingsHeader } from '../common/colours';\r\nimport { wonderousMagic } from '../events/eventComponents/wonderousMagicEvent.component';\r\nimport { rodOfWonderResults } from '../events/eventComponents/rodOfWonderResults/rodOfWonderResults';\r\n\r\nconst useStyles = makeStyles({\r\n  footerButton: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n  dialogContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minWidth: 550,\r\n  },\r\n  dialogHeader: {\r\n    backgroundColor: userSettingsHeader,\r\n    color: 'white',\r\n    textAlign: 'center',\r\n  },\r\n  dropDown: {\r\n    marginLeft: 5,\r\n    minWidth: 215,\r\n  },\r\n});\r\n\r\nconst UserSettings = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n\r\n  const eventsAlwaysTrigger = useSelector(eventsAlwaysTriggerSelector);\r\n  const alwaysSelectSameEvent = useSelector(alwaysSelectSameEventSelector);\r\n  const eventAlwaysSelected = useSelector(eventAlwaysSelectedSelector);\r\n  const eventIsRodOfWonder =\r\n    alwaysSelectSameEvent && eventAlwaysSelected === wonderousMagic.title;\r\n  const rodResultAlwaysSelected = useSelector(\r\n    alwaysSelectSameRodResultSelector\r\n  );\r\n  const rodOfWonderAlwaysSelected = useSelector(\r\n    rodOfWonderAlwaysSelectedSelector\r\n  );\r\n  const resetOnlyResetsRounds = useSelector(resetOnlyResetsRoundsSelector);\r\n\r\n  const onUserSettingsClicked = () => {\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setDialogOpen(false);\r\n  };\r\n\r\n  const eventsAlwaysTriggerClicked = event => {\r\n    const value = event.target.checked;\r\n    dispatch(setEventsAlwaysTrigger(value));\r\n  };\r\n\r\n  const alwaysSelectSameEventClicked = event => {\r\n    const value = event.target.checked;\r\n    dispatch(setAlwaysSelectSameEvent(value));\r\n  };\r\n\r\n  const sameEventSelected = event => {\r\n    const value = event.target.value;\r\n    dispatch(setEventAlwaysSelected(value));\r\n  };\r\n\r\n  const alwaysSelectSameRodResultClicked = event => {\r\n    const value = event.target.checked;\r\n    dispatch(setAlwaysSelectSameRodResult(value));\r\n  };\r\n\r\n  const sameRodOfWonderSelected = event => {\r\n    const value = event.target.value;\r\n    dispatch(setRodOfWonderAlwaysSelected(value));\r\n  };\r\n\r\n  const resetOnlyResetsRoundsClicked = event => {\r\n    const value = event.target.checked;\r\n    dispatch(setResetOnlyResetsRounds(value));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Button\r\n        className={classes.footerButton}\r\n        variant=\"contained\"\r\n        onClick={onUserSettingsClicked}\r\n      >\r\n        Settings\r\n      </Button>\r\n      <Dialog open={dialogOpen} onClose={onClose}>\r\n        <DialogTitle className={classes.dialogHeader}>\r\n          User Settings\r\n        </DialogTitle>\r\n        <DialogContent className={classes.dialogContent}>\r\n          <FormControlLabel\r\n            label=\"'Reset' Only Resets Current Round\"\r\n            labelPlacement=\"start\"\r\n            control={\r\n              <Checkbox\r\n                color=\"default\"\r\n                checked={resetOnlyResetsRounds}\r\n                onChange={resetOnlyResetsRoundsClicked}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Events Always Trigger\"\r\n            labelPlacement=\"start\"\r\n            control={\r\n              <Checkbox\r\n                color=\"default\"\r\n                checked={eventsAlwaysTrigger}\r\n                onChange={eventsAlwaysTriggerClicked}\r\n              />\r\n            }\r\n          />\r\n          <FormControlLabel\r\n            label=\"Always Show Same Event\"\r\n            labelPlacement=\"start\"\r\n            control={\r\n              <Checkbox\r\n                color=\"default\"\r\n                checked={alwaysSelectSameEvent}\r\n                onChange={alwaysSelectSameEventClicked}\r\n              />\r\n            }\r\n          />\r\n          {alwaysSelectSameEvent && (\r\n            <FormControlLabel\r\n              label=\"Same Event Shown:\"\r\n              labelPlacement=\"start\"\r\n              control={\r\n                <Select\r\n                  variant=\"outlined\"\r\n                  className={classes.dropDown}\r\n                  value={eventAlwaysSelected}\r\n                  onChange={sameEventSelected}\r\n                >\r\n                  {events\r\n                    .sort((a, b) => a.percentileMin - b.percentileMin)\r\n                    .sort((a, b) => a.table - b.table)\r\n                    .map(event => (\r\n                      <MenuItem key={event.title} value={event.title}>\r\n                        Table {event.table}, {event.percentileMin}-\r\n                        {event.percentileMax}% - {event.title}\r\n                      </MenuItem>\r\n                    ))}\r\n                </Select>\r\n              }\r\n            />\r\n          )}\r\n          {eventIsRodOfWonder && (\r\n            <FormControlLabel\r\n              label=\"Always Show Same Rod Of Wonder Result\"\r\n              labelPlacement=\"start\"\r\n              control={\r\n                <Checkbox\r\n                  color=\"default\"\r\n                  checked={rodResultAlwaysSelected}\r\n                  onChange={alwaysSelectSameRodResultClicked}\r\n                />\r\n              }\r\n            />\r\n          )}\r\n          {eventIsRodOfWonder && rodResultAlwaysSelected && (\r\n            <FormControlLabel\r\n              label=\"Same Rod Of Wonder Result Shown:\"\r\n              labelPlacement=\"start\"\r\n              control={\r\n                <Select\r\n                  variant=\"outlined\"\r\n                  className={classes.dropDown}\r\n                  value={rodOfWonderAlwaysSelected}\r\n                  onChange={sameRodOfWonderSelected}\r\n                >\r\n                  {rodOfWonderResults.map(result => (\r\n                    <MenuItem key={result.title} value={result.title}>\r\n                      {result.title}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              }\r\n            />\r\n          )}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserSettings;\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport FlowchartDisplay from './flowchartDisplay.component';\r\nimport UserSettings from './userSettings.component';\r\n\r\nconst useStyles = makeStyles({\r\n  footer: {\r\n    margin: 20,\r\n  },\r\n  footerButton: {\r\n    marginLeft: 10,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nconst ActivePrimalEventsListFooter = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box className={classes.footer}>\r\n        <UserSettings />\r\n        <FlowchartDisplay />\r\n        <Button\r\n          className={classes.footerButton}\r\n          component={NavLink}\r\n          variant=\"contained\"\r\n          to=\"/\"\r\n        >\r\n          Home\r\n        </Button>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ActivePrimalEventsListFooter;\r\n","import React from 'react';\r\nimport { Box, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { activePrimalEventsSelector } from '../state/activePrimalEvents/activePrimalEventsState';\r\nimport { allExpandedSelector } from '../state/eventExpansionState/eventExpansionState';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport { primalEventsHeader } from '../common/colours';\r\nimport { toggleAllExpandedThunk } from '../state/eventExpansionState/eventExpansionState.thunk';\r\n\r\nconst useStyles = makeStyles({\r\n  header: {\r\n    paddingTop: 4,\r\n    paddingBottom: 5,\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    backgroundColor: primalEventsHeader,\r\n    color: 'white',\r\n    borderTopLeftRadius: 2,\r\n    borderTopRightRadius: 2,\r\n  },\r\n  subtitleContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  subtitle: {\r\n    marginLeft: 5,\r\n    marginRight: 5,\r\n  },\r\n  expandButton: {\r\n    color: 'white',\r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n  },\r\n  headerText: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nconst ActivePrimalEventsListHeader = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const activePrimalEvents = useSelector(activePrimalEventsSelector);\r\n  const allExpanded = useSelector(allExpandedSelector);\r\n\r\n  const toggleAllClicked = () => {\r\n    dispatch(toggleAllExpandedThunk());\r\n  };\r\n\r\n  const buildExpandIcon = expanded => {\r\n    if (expanded === undefined) {\r\n      return <RemoveIcon />;\r\n    }\r\n\r\n    if (!expanded) {\r\n      return <ExpandMoreIcon />;\r\n    }\r\n\r\n    return <ExpandLessIcon />;\r\n  };\r\n\r\n  const buildExpandButton = expanded => {\r\n    return (\r\n      <IconButton\r\n        disableRipple\r\n        className={classes.expandButton}\r\n        onClick={toggleAllClicked}\r\n      >\r\n        {buildExpandIcon(expanded)}\r\n      </IconButton>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.header}>\r\n      <Box className={classes.headerText}>\r\n        {buildExpandButton(allExpanded)}\r\n        <Typography variant=\"h4\">Active Primal Events</Typography>\r\n        {buildExpandButton(allExpanded)}\r\n      </Box>\r\n      <Box className={classes.subtitleContainer}>\r\n        <Typography className={classes.subtitle}>\r\n          Active Primal Magic Events: {activePrimalEvents.length}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActivePrimalEventsListHeader;\r\n","import { Box, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport ActivePrimalEventsListContent from './activePrimalEventsListContent.component';\r\nimport ActivePrimalEventsListFooter from './activePrimalEventsListFooter.content';\r\nimport ActivePrimalEventsListHeader from './activePrimalEventsListHeader.component';\r\n\r\nconst useStyles = makeStyles({\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    height: '100%',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nconst ActivePrimalEventsList = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box className={classes.content}>\r\n      <ActivePrimalEventsListHeader />\r\n      <ActivePrimalEventsListContent />\r\n      <ActivePrimalEventsListFooter />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ActivePrimalEventsList;\r\n","import { wonderousMagic } from '../../events/eventComponents/wonderousMagicEvent.component';\r\nimport { rollPercentile, rollTableDice } from '../../random';\r\nimport { makeVariable } from '../activePrimalEvents/activePrimalEventsState';\r\nimport { generateDialogEvent } from '../manualTrigger/manualTriggerState.thunk';\r\nimport {\r\n  calculateIncrementAndMax,\r\n  primalStormInitialState,\r\n  primalStormStateSelector,\r\n  setPrimalStormCurrentChance,\r\n} from '../primalStorm/primalStormState';\r\nimport {\r\n  setTriggerDialogState,\r\n  stormTrigerType,\r\n  triggerDialogInitialState,\r\n} from '../triggerDialog/triggerDialogState';\r\nimport {\r\n  alwaysSelectSameEventSelector,\r\n  alwaysSelectSameRodResultSelector,\r\n  eventAlwaysSelectedSelector,\r\n  eventsAlwaysTriggerSelector,\r\n  rodOfWonderAlwaysSelectedSelector,\r\n} from '../userSettings/userSetingsState';\r\nimport { currentRoundSelector, incrementRound } from './roundsState';\r\n\r\n// Thunk that handles all state when pressing the advance round button\r\n// Increments the round number\r\n// Then, if primal magic storm is on, generates the dialog state and event state if roll is high enough\r\n//  and opens the event dialog (this functionality comes later)\r\nexport const advanceRoundThunk = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  dispatch(incrementRound());\r\n\r\n  const {\r\n    active,\r\n    suppressed,\r\n    leftArea,\r\n    currentChance,\r\n  } = primalStormStateSelector(state);\r\n\r\n  if (!active) {\r\n    return;\r\n  }\r\n\r\n  const { increment, max } = calculateIncrementAndMax(suppressed, leftArea);\r\n\r\n  let newChance = Math.min(max, currentChance + increment);\r\n  const currentThreshold = Math.min(max, currentChance);\r\n\r\n  const percentile = rollPercentile();\r\n  const currentCrVariable = makeVariable(3, 1, 11); // 1d3+11 = CR (between 12 and 14);\r\n\r\n  const dialogState = {\r\n    ...triggerDialogInitialState,\r\n    open: true,\r\n    triggerType: stormTrigerType,\r\n    percentile,\r\n    cr: currentCrVariable.result,\r\n    threshold: currentThreshold,\r\n  };\r\n\r\n  const eventsAlwaysTrigger = eventsAlwaysTriggerSelector(state);\r\n\r\n  if (eventsAlwaysTrigger || percentile <= currentThreshold) {\r\n    // Chance drops back to default when an event is triggered\r\n    newChance = leftArea ? 0 : increment;\r\n\r\n    // Need to use current round +1 because we incremented the round above\r\n    const currentRound = currentRoundSelector(state) + 1;\r\n    const alwaysShowSameEvent = alwaysSelectSameEventSelector(state);\r\n    const eventAlwaysSelected = alwaysShowSameEvent\r\n      ? eventAlwaysSelectedSelector(state)\r\n      : undefined;\r\n    const alwaysShowSameRodResult = alwaysSelectSameRodResultSelector(state);\r\n    const rodOfWonderResultAlwaysSelected =\r\n      eventAlwaysSelected === wonderousMagic.title && alwaysShowSameRodResult\r\n        ? rodOfWonderAlwaysSelectedSelector(state)\r\n        : undefined;\r\n\r\n    const eventPercentile = rollPercentile();\r\n    const tableRoll = rollTableDice();\r\n    const event = generateDialogEvent(\r\n      eventPercentile,\r\n      tableRoll,\r\n      currentCrVariable,\r\n      currentRound,\r\n      eventAlwaysSelected,\r\n      rodOfWonderResultAlwaysSelected,\r\n      dialogState.triggerType\r\n    );\r\n    dialogState.currentEvent = event;\r\n  }\r\n\r\n  dispatch(setPrimalStormCurrentChance(newChance));\r\n  dispatch(setTriggerDialogState(dialogState));\r\n};\r\n","import {\r\n  resetPrimalStormState,\r\n  setPrimalStormActive,\r\n} from './primalStormState';\r\n\r\nexport const activatePrimalStormThunk = isActive => dispatch => {\r\n  dispatch(setPrimalStormActive(isActive));\r\n\r\n  if (!isActive) {\r\n    dispatch(resetPrimalStormState());\r\n  }\r\n};\r\n","import {\r\n  Avatar,\r\n  Box,\r\n  Checkbox,\r\n  Divider,\r\n  FormControlLabel,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  primalStormStateSelector,\r\n  setPrimalStormLeftArea,\r\n  setPrimalStormSuppressed,\r\n} from '../state/primalStorm/primalStormState';\r\nimport { activatePrimalStormThunk } from '../state/primalStorm/primalStormState.thunk';\r\n\r\nfunction getColor(value) {\r\n  //value from 0 to 1\r\n  var hue = ((1 - value) * 120).toString(10);\r\n  return ['hsl(', hue, ',60%,50%)'].join('');\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  content: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n  },\r\n  divider: {\r\n    width: '100%',\r\n  },\r\n  currentChanceContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  currentChanceText: {\r\n    marginLeft: 16,\r\n  },\r\n  currentChanceAvatar: {\r\n    backgroundColor: ({ value }) => getColor(value),\r\n    marginLeft: 10,\r\n    fontSize: '15px',\r\n    color: 'black',\r\n  },\r\n});\r\n\r\nconst PrimalStormContent = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { active, suppressed, leftArea, currentChance } = useSelector(\r\n    primalStormStateSelector\r\n  );\r\n\r\n  const classes = useStyles({ value: currentChance / 100 });\r\n\r\n  const enablePrimalStorm = event => {\r\n    const value = event.target.checked;\r\n    dispatch(activatePrimalStormThunk(value));\r\n  };\r\n\r\n  const suppressPrimalStorm = event => {\r\n    const value = event.target.checked;\r\n    dispatch(setPrimalStormSuppressed(value));\r\n  };\r\n\r\n  const leavePrimalStorm = event => {\r\n    const value = event.target.checked;\r\n    dispatch(setPrimalStormLeftArea(value));\r\n  };\r\n\r\n  const makeCheckboxWithTooltip = (label, toolTip, checked, onChange) => (\r\n    <Tooltip placement=\"left\" title={toolTip}>\r\n      <FormControlLabel\r\n        label={label}\r\n        labelPlacement=\"start\"\r\n        control={\r\n          <Checkbox color=\"default\" checked={checked} onChange={onChange} />\r\n        }\r\n      />\r\n    </Tooltip>\r\n  );\r\n\r\n  return (\r\n    <Box className={classes.content}>\r\n      <FormControlLabel\r\n        label=\"Enable Primal Storm\"\r\n        labelPlacement=\"start\"\r\n        control={\r\n          <Checkbox\r\n            color=\"default\"\r\n            checked={active}\r\n            onChange={enablePrimalStorm}\r\n          />\r\n        }\r\n      />\r\n      {active && (\r\n        <Fragment>\r\n          <Divider className={classes.divider} />\r\n          {makeCheckboxWithTooltip(\r\n            'Storm Suppressed',\r\n            'If the weather is suppressed by any means, the ' +\r\n              'chance increases by 5% per round to a maximum of 50%',\r\n            suppressed,\r\n            suppressPrimalStorm\r\n          )}\r\n          {makeCheckboxWithTooltip(\r\n            'Left Storm Area',\r\n            'If all creatures leave the area of the storm the ' +\r\n              'chance is reduced to 50% if higher, or remains ' +\r\n              'static if lower. It reduces to 0% when an event ' +\r\n              'triggers',\r\n            leftArea,\r\n            leavePrimalStorm\r\n          )}\r\n          <Box className={classes.currentChanceContainer}>\r\n            <Typography className={classes.currentChanceText}>\r\n              Current Primal Event Chance:\r\n            </Typography>\r\n            <Avatar className={classes.currentChanceAvatar}>\r\n              {currentChance}%\r\n            </Avatar>\r\n          </Box>\r\n        </Fragment>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PrimalStormContent;\r\n","import React from 'react';\r\nimport { Avatar, Box, Button, makeStyles, Typography } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { currentRoundSelector } from '../state/rounds/roundsState';\r\nimport { resetAll } from '../state/app/primalMagic.reducer';\r\nimport { primalStormHeader } from '../common/colours';\r\nimport PrimalStormContent from './primalStormContent.component';\r\n\r\nconst useStyles = makeStyles({\r\n  content: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  roundsContent: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  resetButton: {\r\n    width: 130,\r\n    height: 30,\r\n    margin: 20,\r\n  },\r\n  currentRoundDisplay: {\r\n    margin: 20,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  roundAvatar: {\r\n    backgroundColor: primalStormHeader,\r\n    height: 30,\r\n    width: 30,\r\n    marginLeft: 10,\r\n  },\r\n});\r\n\r\nconst RoundsContent = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const currentRound = useSelector(currentRoundSelector);\r\n\r\n  const onResetClicked = () => {\r\n    dispatch(resetAll());\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.content}>\r\n      <Box className={classes.roundsContent}>\r\n        <Box className={classes.currentRoundDisplay}>\r\n          <Typography>Current Round: </Typography>\r\n          <Avatar className={classes.roundAvatar}>{currentRound}</Avatar>\r\n        </Box>\r\n        <Button\r\n          className={classes.resetButton}\r\n          variant=\"contained\"\r\n          onClick={onResetClicked}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </Box>\r\n      <PrimalStormContent />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RoundsContent;\r\n","import { Box, Button, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport BarHeader from '../common/barHeader.component';\r\nimport { primalStormHeader } from '../common/colours';\r\nimport { advanceRoundThunk } from '../state/rounds/roundsState.thunk';\r\nimport RoundsContent from './roundsContent.component';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    height: '100%',\r\n    width: '100%',\r\n    alignItems: 'center',\r\n  },\r\n  footer: {\r\n    margin: 20,\r\n  },\r\n});\r\n\r\nconst RoundsBar = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const onNextRoundClicked = () => {\r\n    dispatch(advanceRoundThunk());\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.container}>\r\n      <BarHeader title=\"Rounds & Primal Storm\" colour={primalStormHeader} />\r\n      <RoundsContent />\r\n      <Box className={classes.footer}>\r\n        <Button variant=\"contained\" onClick={onNextRoundClicked}>\r\n          Next Round\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RoundsBar;\r\n","// Thunk that handles all state when pressing the confirm button in a trigger dialog\r\n\r\nimport { twoSimultaneousEvents } from '../../events/eventComponents/twoSimlultaneousEvents/twoSimultaneousEventsEvent.component';\r\nimport { wonderousMagic } from '../../events/eventComponents/wonderousMagicEvent.component';\r\nimport { rollPercentile, rollTableDice } from '../../random';\r\nimport {\r\n  addActivePrimalEvent,\r\n  reRollVariable,\r\n} from '../activePrimalEvents/activePrimalEventsState';\r\nimport { allExpandedSelector } from '../eventExpansionState/eventExpansionState';\r\nimport { specifiedCrSelector } from '../manualTrigger/manualTriggerState';\r\nimport {\r\n  calculateFinalRound,\r\n  generateDialogEvent,\r\n  generateEventVariablesWithDefaults,\r\n} from '../manualTrigger/manualTriggerState.thunk';\r\nimport { currentRoundSelector } from '../rounds/roundsState';\r\nimport {\r\n  alwaysSelectSameEventSelector,\r\n  alwaysSelectSameRodResultSelector,\r\n  eventAlwaysSelectedSelector,\r\n  rodOfWonderAlwaysSelectedSelector,\r\n} from '../userSettings/userSetingsState';\r\nimport {\r\n  closeTriggerDialog,\r\n  setTriggerDialogState,\r\n  triggerDialogCurrentEventSelector,\r\n  triggerDialogStateSelector,\r\n} from './triggerDialogState';\r\n\r\n// Adds the trigger dialog's current event to the active primal events then wipes the dialog to close it\r\nexport const confirmDialogPrimalEventThunk = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const currentEvent = triggerDialogCurrentEventSelector(state);\r\n  const allExpanded = allExpandedSelector(state);\r\n  const dispatchedEvent = {\r\n    ...currentEvent,\r\n    expanded: !!allExpanded,\r\n  };\r\n  dispatch(addActivePrimalEvent(dispatchedEvent));\r\n  dispatch(closeTriggerDialog());\r\n};\r\n\r\n// Thunk that handles all state when pressing the re-roll event button in a trigger dialog\r\n// Re-rolls the primal magic event based on the current dialog settings and updates the dialog state\r\nexport const rerollDialogPrimalEventThunk = () => (dispatch, getState) => {\r\n  const state = getState();\r\n  const currentDialogState = triggerDialogStateSelector(state);\r\n  const eventPercentile = rollPercentile();\r\n  const tableRoll = rollTableDice();\r\n  const currentCr = specifiedCrSelector(state);\r\n  const currentRound = currentRoundSelector(state);\r\n  const alwaysShowSameEvent = alwaysSelectSameEventSelector(state);\r\n  const eventAlwaysSelected = alwaysShowSameEvent\r\n    ? eventAlwaysSelectedSelector(state)\r\n    : undefined;\r\n  const alwaysShowSameRodResult = alwaysSelectSameRodResultSelector(state);\r\n  const rodOfWonderResultAlwaysSelected =\r\n    eventAlwaysSelected === wonderousMagic.title && alwaysShowSameRodResult\r\n      ? rodOfWonderAlwaysSelectedSelector(state)\r\n      : undefined;\r\n  const event = generateDialogEvent(\r\n    eventPercentile,\r\n    tableRoll,\r\n    currentCr,\r\n    currentRound,\r\n    eventAlwaysSelected,\r\n    rodOfWonderResultAlwaysSelected,\r\n    currentDialogState.triggerType\r\n  );\r\n  event.expanded = currentDialogState.currentEvent.expanded;\r\n  const newDialogState = {\r\n    ...currentDialogState,\r\n    currentEvent: event,\r\n  };\r\n\r\n  dispatch(setTriggerDialogState(newDialogState));\r\n};\r\n\r\n// Thunk that handles all state when pressing the re-roll event variables button in a trigger dialog\r\n// Keeps the current primal magic event but re-rolls any variables\r\nexport const rerollDialogPrimalEventVariablesThunk = () => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const state = getState();\r\n  const currentDialogState = triggerDialogStateSelector(state);\r\n  const currentEvent = currentDialogState.currentEvent;\r\n\r\n  let newVariables = {};\r\n\r\n  if (currentEvent.title === wonderousMagic.title) {\r\n    // Because wonderous magic has an inner table we need to handle it separately\r\n    // We must completely reroll the variables object, not just each variable\r\n    const alwaysShowSameRodResult = alwaysSelectSameRodResultSelector(state);\r\n    const rodOfWonderResultAlwaysSelected = alwaysShowSameRodResult\r\n      ? rodOfWonderAlwaysSelectedSelector(state)\r\n      : undefined;\r\n    newVariables = generateEventVariablesWithDefaults(\r\n      wonderousMagic,\r\n      currentEvent.cr.result,\r\n      rodOfWonderResultAlwaysSelected\r\n    );\r\n  } else if (currentEvent.title === twoSimultaneousEvents.title) {\r\n    // Because two simultaneous events has two events inside which need variables rerolling\r\n    // we need to completely re roll the variables object, not just each variable\r\n    newVariables = generateEventVariablesWithDefaults(\r\n      twoSimultaneousEvents,\r\n      currentEvent.cr.result\r\n    );\r\n  } else {\r\n    Object.entries(currentEvent.variables).forEach(([key, variable]) => {\r\n      newVariables[key] = reRollVariable(variable);\r\n    });\r\n  }\r\n\r\n  const newDialogState = {\r\n    ...currentDialogState,\r\n    currentEvent: {\r\n      ...currentEvent,\r\n      variables: newVariables,\r\n      finalRound: calculateFinalRound(\r\n        newVariables.duration,\r\n        currentEvent.startRound\r\n      ),\r\n    },\r\n  };\r\n\r\n  dispatch(setTriggerDialogState(newDialogState));\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  manualTriggerHeader,\r\n  manualTriggerHeaderEmphasis,\r\n  primalStormHeader,\r\n  primalStormHeaderEmphasis,\r\n} from '../common/colours';\r\nimport {\r\n  closeTriggerDialog,\r\n  manualTriggerType,\r\n  toggleTriggerDialogPrimalEventExpanded,\r\n  triggerDialogStateSelector,\r\n} from '../state/triggerDialog/triggerDialogState';\r\nimport { eventsAlwaysTriggerSelector } from '../state/userSettings/userSetingsState';\r\nimport EventCard from '../events/eventCard.component';\r\nimport SyncIcon from '@material-ui/icons/Sync';\r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { getEventCardContent } from '../events/events';\r\nimport {\r\n  confirmDialogPrimalEventThunk,\r\n  rerollDialogPrimalEventThunk,\r\n  rerollDialogPrimalEventVariablesThunk,\r\n} from '../state/triggerDialog/triggerDialogState.thunk';\r\nimport VM from '../common/variableMark.component';\r\nimport {\r\n  calculateIncrementAndMax,\r\n  primalStormStateSelector,\r\n} from '../state/primalStorm/primalStormState';\r\n\r\nconst getBackgroundColour = isManualTrigger =>\r\n  isManualTrigger ? manualTriggerHeader : primalStormHeader;\r\n\r\nconst getEmphasisColour = isManualTrigger =>\r\n  isManualTrigger ? manualTriggerHeaderEmphasis : primalStormHeaderEmphasis;\r\n\r\nconst useStyles = makeStyles({\r\n  dialogHeader: {\r\n    backgroundColor: ({ isManualTrigger }) =>\r\n      getBackgroundColour(isManualTrigger),\r\n    color: 'white',\r\n    textAlign: 'center',\r\n  },\r\n  eventOccurrance: {\r\n    fontWeight: 'bold',\r\n  },\r\n  cardHeader: {\r\n    backgroundColor: ({ isManualTrigger }) =>\r\n      getBackgroundColour(isManualTrigger),\r\n    color: 'white',\r\n    paddingTop: 3,\r\n    paddingBottom: 3,\r\n  },\r\n  reRollButton: {\r\n    margin: 5,\r\n    color: blue[500],\r\n    justifySelf: 'center',\r\n  },\r\n  reRollContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n  },\r\n  confirmButton: {\r\n    backgroundColor: ({ isManualTrigger }) =>\r\n      getBackgroundColour(isManualTrigger),\r\n    color: 'white',\r\n    '&:hover': {\r\n      backgroundColor: ({ isManualTrigger }) =>\r\n        getEmphasisColour(isManualTrigger),\r\n    },\r\n  },\r\n});\r\n\r\nconst getChanceMessage = (eventOccurred, primalStormState, threshold) => {\r\n  const { suppressed, leftArea, currentChance } = primalStormState;\r\n  const { increment, max } = calculateIncrementAndMax(suppressed, leftArea);\r\n  const isCapped = currentChance >= max && threshold >= max;\r\n\r\n  if (eventOccurred) {\r\n    if (leftArea) {\r\n      return `Chance next round reset to ${currentChance}% (left area)`;\r\n    }\r\n\r\n    return `Chance next round reset to ${currentChance}%${\r\n      suppressed ? ' (suppressed)' : ''\r\n    }`;\r\n  } else {\r\n    if (leftArea) {\r\n      return `Chance next round remains at ${currentChance}% (left area)`;\r\n    }\r\n\r\n    if (isCapped) {\r\n      return `Chance next round capped at ${max}%${\r\n        suppressed ? ' (suppressed)' : ''\r\n      }`;\r\n    }\r\n\r\n    return `Chance next round increased by ${increment}%${\r\n      suppressed ? ' (suppressed)' : ''\r\n    } to ${currentChance}%`;\r\n  }\r\n};\r\n\r\nconst PrimalEventDialog = () => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    percentile,\r\n    threshold,\r\n    triggerType,\r\n    open,\r\n    currentEvent,\r\n  } = useSelector(triggerDialogStateSelector);\r\n  const isManualTrigger = triggerType === manualTriggerType;\r\n  const classes = useStyles({ isManualTrigger });\r\n  const eventsAlwaysTriggered = useSelector(eventsAlwaysTriggerSelector);\r\n\r\n  const eventOccurred = percentile <= threshold;\r\n  const showEventContent = eventOccurred || eventsAlwaysTriggered;\r\n  let eventOccuranceMessage = `Event did not occur (${percentile}%, <=${threshold}% required)`;\r\n\r\n  if (eventOccurred) {\r\n    eventOccuranceMessage = `Event occurred (${percentile}%, <=${threshold}% achieved)`;\r\n  }\r\n\r\n  const primalStormState = useSelector(primalStormStateSelector);\r\n  const chanceMessage = getChanceMessage(\r\n    eventOccurred,\r\n    primalStormState,\r\n    threshold\r\n  );\r\n\r\n  const onAcceptClicked = () => {\r\n    dispatch(confirmDialogPrimalEventThunk());\r\n  };\r\n\r\n  const onCloseDialogClicked = () => {\r\n    dispatch(closeTriggerDialog());\r\n  };\r\n\r\n  const onReRollEventClicked = () => {\r\n    dispatch(rerollDialogPrimalEventThunk());\r\n  };\r\n\r\n  const onReRollEventVariablesClicked = () => {\r\n    dispatch(rerollDialogPrimalEventVariablesThunk());\r\n  };\r\n\r\n  const onExpandToggleClicked = () => {\r\n    dispatch(toggleTriggerDialogPrimalEventExpanded());\r\n  };\r\n\r\n  if (!open) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      open={open}\r\n      onClose={\r\n        eventOccurred || eventsAlwaysTriggered\r\n          ? undefined\r\n          : onCloseDialogClicked\r\n      }\r\n    >\r\n      <DialogTitle className={classes.dialogHeader}>\r\n        {isManualTrigger ? 'Manual' : 'Storm'} Primal Event Trigger\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <Typography className={classes.eventOccurrance}>\r\n          {eventOccuranceMessage}\r\n        </Typography>\r\n        {!eventOccurred && eventsAlwaysTriggered && (\r\n          <Typography variant=\"caption\">\r\n            (But was forced to occur by settings)\r\n          </Typography>\r\n        )}\r\n        {!isManualTrigger && (\r\n          <Typography className={classes.eventOccurrance}>\r\n            {chanceMessage}\r\n          </Typography>\r\n        )}\r\n        {showEventContent && (\r\n          <Fragment>\r\n            <Typography>\r\n              CR: <VM v={currentEvent.cr} />\r\n            </Typography>\r\n          </Fragment>\r\n        )}\r\n        {showEventContent && (\r\n          <Fragment>\r\n            <Box className={classes.reRollContainer}>\r\n              <Button\r\n                className={classes.reRollButton}\r\n                startIcon={<SyncIcon />}\r\n                onClick={onReRollEventClicked}\r\n              >\r\n                Re-Roll (Event)\r\n              </Button>\r\n              <Button\r\n                className={classes.reRollButton}\r\n                startIcon={<ReplayIcon />}\r\n                onClick={onReRollEventVariablesClicked}\r\n              >\r\n                Re-Roll (Event Variables)\r\n              </Button>\r\n            </Box>\r\n            <EventCard\r\n              event={currentEvent}\r\n              titleColour={\r\n                isManualTrigger ? manualTriggerHeader : primalStormHeader\r\n              }\r\n              onExpandToggleClicked={onExpandToggleClicked}\r\n              getEventCardContent={getEventCardContent}\r\n            />\r\n          </Fragment>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        {showEventContent && (\r\n          <Button\r\n            className={classes.confirmButton}\r\n            variant=\"contained\"\r\n            onClick={onAcceptClicked}\r\n          >\r\n            Trigger Event\r\n          </Button>\r\n        )}\r\n        <Button variant=\"contained\" onClick={onCloseDialogClicked}>\r\n          {showEventContent ? 'Do Not Trigger' : 'Phew...'}\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PrimalEventDialog;\r\n","import React from 'react';\r\nimport { makeStyles, Paper } from '@material-ui/core';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport ManualTriggerBar from '../manualTriggerBar/manualTrigger.component';\r\nimport ActivePrimalEventsList from '../activePrimalEventsList/activePrimalEventsList.component';\r\nimport RoundsBar from '../roundsBar/roundsBar.component';\r\nimport PrimalEventDialog from '../primalEventDialog/primalEventDialog.component';\r\n\r\nconst useStyles = makeStyles({\r\n  contentContainer: {\r\n    height: 'calc(100vh - 20px)',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    backgroundColor: grey[100],\r\n  },\r\n  buttonPage: {\r\n    margin: 10,\r\n    width: '20%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  page: {\r\n    margin: 10,\r\n    width: '50%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  pinnedEventsPage: {\r\n    margin: 10,\r\n    width: '20%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});\r\n\r\nconst PrimalEventPage = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.contentContainer}>\r\n      <Paper elevation={3} variant=\"outlined\" className={classes.buttonPage}>\r\n        <ManualTriggerBar />\r\n      </Paper>\r\n      <Paper elevation={3} variant=\"outlined\" className={classes.page}>\r\n        <ActivePrimalEventsList />\r\n      </Paper>\r\n      <Paper\r\n        elevation={3}\r\n        variant=\"outlined\"\r\n        className={classes.pinnedEventsPage}\r\n      >\r\n        <RoundsBar />\r\n      </Paper>\r\n      <PrimalEventDialog />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrimalEventPage;\r\n","import React from 'react';\r\nimport { routerMiddleware, ConnectedRouter } from 'connected-react-router';\r\nimport { Route, Switch } from 'react-router';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport * as log from 'loglevel';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\nimport { createHashHistory } from 'history';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { buildTheme } from './styles/theming';\r\nimport AppReducer from './state/app/App.reducer';\r\nimport Homepage from './homepage/homepage.component';\r\nimport PageNotFoundError from './errorPages/pageNotFoundError.component';\r\nimport persistReducer from 'redux-persist/es/persistReducer';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport persistStore from 'redux-persist/es/persistStore';\r\nimport PrimalEventPage from './primalEventPage/primalEventPage.component';\r\n\r\nconst history = createHashHistory();\r\nconst middleware = [thunk, routerMiddleware(history)];\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const logger = createLogger();\r\n  middleware.push(logger);\r\n  log.setDefaultLevel(log.levels.DEBUG);\r\n} else {\r\n  log.setDefaultLevel(log.levels.ERROR);\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(\r\n  persistReducer({ key: 'root', storage }, AppReducer(history)),\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\nconst persistor = persistStore(store);\r\n\r\nconst pageContent = () => (\r\n  <Switch>\r\n    <Route exact path={'/'} render={() => <Homepage />} />\r\n    <Route\r\n      exact\r\n      path={'/PrimalMagicTracker'}\r\n      render={() => <PrimalEventPage />}\r\n    />\r\n    <Route render={() => <PageNotFoundError />} />\r\n  </Switch>\r\n);\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Provider store={store}>\r\n        <PersistGate persistor={persistor} loading={null}>\r\n          <ConnectedRouter history={history}>\r\n            <MuiThemeProvider theme={buildTheme()}>\r\n              {pageContent()}\r\n            </MuiThemeProvider>\r\n          </ConnectedRouter>\r\n        </PersistGate>\r\n      </Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const buildTheme = () => {\r\n  const options = {\r\n    typography: {\r\n      useNextVariants: true,\r\n      singleRiskView: {\r\n        fontSize: 20,\r\n        padding: '10px',\r\n        margin: 'auto',\r\n        textAlign: 'left',\r\n      },\r\n    },\r\n    textField: {\r\n      padding: '0px',\r\n    },\r\n    slider: {\r\n      padding: '10px',\r\n      margin: '-10px',\r\n    },\r\n    select: {\r\n      padding: '10px',\r\n    },\r\n    tabs: {\r\n      padding: '10px',\r\n    },\r\n    formControl: {\r\n      padding: '10px',\r\n    },\r\n  };\r\n\r\n  return createMuiTheme(options);\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'typeface-roboto';\r\n\r\nconst appToRender = () => {\r\n  ReactDOM.render(<App />, document.getElementById('root'));\r\n};\r\n\r\nappToRender();\r\n"],"sourceRoot":""}